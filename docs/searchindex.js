Search.setIndex({"alltitles": {"A Simple Example": [[0, "a-simple-example"]], "API Reference": [[3, "api-reference"]], "About the project": [[67, "about-the-project"]], "Asynchronous Flows": [[70, "Asynchronous-Flows"]], "Building a flow": [[70, "Building-a-flow"]], "Classes": [[3, "classes"], [12, "classes"], [13, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [42, "classes"], [45, "classes"], [65, "classes"]], "Concluding remarks": [[70, "Concluding-remarks"]], "Concurrent Processing in fluxus": [[0, "concurrent-processing-in-fluxus"]], "Consumers": [[70, "Consumers"]], "Contributing": [[0, "id3"], [66, "contributing"]], "Contributing to Our User Guide": [[69, "contributing-to-our-user-guide"]], "Creating Conduit classes": [[70, "Creating-Conduit-classes"]], "Creating a Flow with custom classes for Producers, Transformers, and Consumers": [[70, "Creating-a-Flow-with-custom-classes-for-Producers,-Transformers,-and-Consumers"]], "Environment Setup": [[0, "environment-setup"]], "Exceptions": [[3, "exceptions"]], "FAQ": [[67, "faq"]], "Functions": [[32, "functions"], [35, "functions"]], "Getting started": [[0, "getting-started"]], "Home": [[0, "home"]], "How does fluxus differ from other pipelining/workflow libraries?": [[67, "how-does-fluxus-differ-from-other-pipelining-workflow-libraries"]], "Introducing Flows": [[0, "introducing-flows"]], "Introduction": [[70, "Introduction"]], "License": [[0, "license"]], "Optional dependencies": [[0, "optional-dependencies"]], "Overview": [[70, "Overview"]], "Parallel flows": [[70, "Parallel-flows"]], "Producers": [[70, "Producers"]], "Release Notes": [[1, "release-notes"]], "Submodules": [[3, "submodules"], [31, "submodules"], [32, "submodules"], [36, "submodules"]], "Table of Contents": [[68, "table-of-contents"]], "The Passthrough transformer": [[70, "The-Passthrough-transformer"]], "Transformers": [[70, "Transformers"]], "User Guide": [[69, "user-guide"]], "User Installation": [[0, "user-installation"]], "Virtual environment": [[0, "virtual-environment"]], "Ways to Contribute": [[66, "ways-to-contribute"]], "What are examples of use cases for fluxus?": [[67, "what-are-examples-of-use-cases-for-fluxus"]], "What is fluxus for?": [[67, "what-is-fluxus-for"]], "What is the origin of the name fluxus?": [[67, "what-is-the-origin-of-the-name-fluxus"]], "Who developed fluxus, and why?": [[67, "who-developed-fluxus-and-why"]], "Why fluxus?": [[0, "why-fluxus"]], "fluxus 1.0": [[1, "fluxus-1-0"]], "fluxus 1.0.0": [[1, "fluxus-1-0-0"]], "fluxus.AsyncConsumer": [[22, "fluxus-asyncconsumer"]], "fluxus.AsyncProducer": [[23, "fluxus-asyncproducer"]], "fluxus.AsyncTransformer": [[24, "fluxus-asynctransformer"]], "fluxus.Consumer": [[25, "fluxus-consumer"]], "fluxus.Flow": [[26, "fluxus-flow"]], "fluxus.FlowWarning": [[27, "fluxus-flowwarning"]], "fluxus.Passthrough": [[28, "fluxus-passthrough"]], "fluxus.Producer": [[29, "fluxus-producer"]], "fluxus.Transformer": [[30, "fluxus-transformer"]], "fluxus.core": [[31, "fluxus-core"]], "fluxus.core.AtomicConduit": [[4, "fluxus-core-atomicconduit"]], "fluxus.core.ConcurrentConduit": [[5, "fluxus-core-concurrentconduit"]], "fluxus.core.Conduit": [[6, "fluxus-core-conduit"]], "fluxus.core.Processor": [[7, "fluxus-core-processor"]], "fluxus.core.SerialConduit": [[8, "fluxus-core-serialconduit"]], "fluxus.core.SerialProcessor": [[9, "fluxus-core-serialprocessor"]], "fluxus.core.SerialSource": [[10, "fluxus-core-serialsource"]], "fluxus.core.Source": [[11, "fluxus-core-source"]], "fluxus.core.producer": [[12, "fluxus-core-producer"]], "fluxus.core.producer.BaseProducer": [[14, "fluxus-core-producer-baseproducer"]], "fluxus.core.producer.ConcurrentProducer": [[15, "fluxus-core-producer-concurrentproducer"]], "fluxus.core.producer.SerialProducer": [[16, "fluxus-core-producer-serialproducer"]], "fluxus.core.producer.SimpleConcurrentProducer": [[17, "fluxus-core-producer-simpleconcurrentproducer"]], "fluxus.core.transformer": [[13, "fluxus-core-transformer"]], "fluxus.core.transformer.BaseTransformer": [[18, "fluxus-core-transformer-basetransformer"]], "fluxus.core.transformer.ConcurrentTransformer": [[19, "fluxus-core-transformer-concurrenttransformer"]], "fluxus.core.transformer.SerialTransformer": [[20, "fluxus-core-transformer-serialtransformer"]], "fluxus.core.transformer.SimpleConcurrentTransformer": [[21, "fluxus-core-transformer-simpleconcurrenttransformer"]], "fluxus.functional": [[32, "fluxus-functional"]], "fluxus.functional.RunResult": [[40, "fluxus-functional-runresult"]], "fluxus.functional.chain": [[41, "fluxus-functional-chain"]], "fluxus.functional.conduit": [[42, "fluxus-functional-conduit"]], "fluxus.functional.conduit.DictConsumer": [[37, "fluxus-functional-conduit-dictconsumer"]], "fluxus.functional.conduit.DictProducer": [[38, "fluxus-functional-conduit-dictproducer"]], "fluxus.functional.conduit.Step": [[39, "fluxus-functional-conduit-step"]], "fluxus.functional.parallel": [[43, "fluxus-functional-parallel"]], "fluxus.functional.passthrough": [[44, "fluxus-functional-passthrough"]], "fluxus.functional.product": [[45, "fluxus-functional-product"]], "fluxus.functional.product.DictProduct": [[48, "fluxus-functional-product-dictproduct"]], "fluxus.functional.run": [[46, "fluxus-functional-run"]], "fluxus.functional.step": [[47, "fluxus-functional-step"]], "fluxus.lineage": [[33, "fluxus-lineage"]], "fluxus.lineage.HasLineage": [[49, "fluxus-lineage-haslineage"]], "fluxus.lineage.LabelingProducer": [[50, "fluxus-lineage-labelingproducer"]], "fluxus.lineage.LabelingTransformer": [[51, "fluxus-lineage-labelingtransformer"]], "fluxus.lineage.LineageOrigin": [[52, "fluxus-lineage-lineageorigin"]], "fluxus.simple": [[34, "fluxus-simple"]], "fluxus.simple.SimpleAsyncProducer": [[53, "fluxus-simple-simpleasyncproducer"]], "fluxus.simple.SimpleProducer": [[54, "fluxus-simple-simpleproducer"]], "fluxus.util": [[35, "fluxus-util"]], "fluxus.util.simplify_repr_attributes": [[55, "fluxus-util-simplify-repr-attributes"]], "fluxus.viz": [[36, "fluxus-viz"]], "fluxus.viz.FlowDrawer": [[58, "fluxus-viz-flowdrawer"]], "fluxus.viz.FlowGraph": [[59, "fluxus-viz-flowgraph"]], "fluxus.viz.FlowGraphStyle": [[60, "fluxus-viz-flowgraphstyle"]], "fluxus.viz.FlowTextStyle": [[61, "fluxus-viz-flowtextstyle"]], "fluxus.viz.TimelineDrawer": [[62, "fluxus-viz-timelinedrawer"]], "fluxus.viz.TimelineMatplotStyle": [[63, "fluxus-viz-timelinematplotstyle"]], "fluxus.viz.TimelineTextStyle": [[64, "fluxus-viz-timelinetextstyle"]], "fluxus.viz.base": [[65, "fluxus-viz-base"]], "fluxus.viz.base.FlowStyle": [[56, "fluxus-viz-base-flowstyle"]], "fluxus.viz.base.TimelineStyle": [[57, "fluxus-viz-base-timelinestyle"]]}, "docnames": ["_generated/home", "_generated/release_notes", "api_landing", "apidoc/fluxus", "apidoc/fluxus/core/fluxus.core.AtomicConduit", "apidoc/fluxus/core/fluxus.core.ConcurrentConduit", "apidoc/fluxus/core/fluxus.core.Conduit", "apidoc/fluxus/core/fluxus.core.Processor", "apidoc/fluxus/core/fluxus.core.SerialConduit", "apidoc/fluxus/core/fluxus.core.SerialProcessor", "apidoc/fluxus/core/fluxus.core.SerialSource", "apidoc/fluxus/core/fluxus.core.Source", "apidoc/fluxus/core/fluxus.core.producer", "apidoc/fluxus/core/fluxus.core.transformer", "apidoc/fluxus/core/producer/fluxus.core.producer.BaseProducer", "apidoc/fluxus/core/producer/fluxus.core.producer.ConcurrentProducer", "apidoc/fluxus/core/producer/fluxus.core.producer.SerialProducer", "apidoc/fluxus/core/producer/fluxus.core.producer.SimpleConcurrentProducer", "apidoc/fluxus/core/transformer/fluxus.core.transformer.BaseTransformer", "apidoc/fluxus/core/transformer/fluxus.core.transformer.ConcurrentTransformer", "apidoc/fluxus/core/transformer/fluxus.core.transformer.SerialTransformer", "apidoc/fluxus/core/transformer/fluxus.core.transformer.SimpleConcurrentTransformer", "apidoc/fluxus/fluxus.AsyncConsumer", "apidoc/fluxus/fluxus.AsyncProducer", "apidoc/fluxus/fluxus.AsyncTransformer", "apidoc/fluxus/fluxus.Consumer", "apidoc/fluxus/fluxus.Flow", "apidoc/fluxus/fluxus.FlowWarning", "apidoc/fluxus/fluxus.Passthrough", "apidoc/fluxus/fluxus.Producer", "apidoc/fluxus/fluxus.Transformer", "apidoc/fluxus/fluxus.core", "apidoc/fluxus/fluxus.functional", "apidoc/fluxus/fluxus.lineage", "apidoc/fluxus/fluxus.simple", "apidoc/fluxus/fluxus.util", "apidoc/fluxus/fluxus.viz", "apidoc/fluxus/functional/conduit/fluxus.functional.conduit.DictConsumer", "apidoc/fluxus/functional/conduit/fluxus.functional.conduit.DictProducer", "apidoc/fluxus/functional/conduit/fluxus.functional.conduit.Step", "apidoc/fluxus/functional/fluxus.functional.RunResult", "apidoc/fluxus/functional/fluxus.functional.chain", "apidoc/fluxus/functional/fluxus.functional.conduit", "apidoc/fluxus/functional/fluxus.functional.parallel", "apidoc/fluxus/functional/fluxus.functional.passthrough", "apidoc/fluxus/functional/fluxus.functional.product", "apidoc/fluxus/functional/fluxus.functional.run", "apidoc/fluxus/functional/fluxus.functional.step", "apidoc/fluxus/functional/product/fluxus.functional.product.DictProduct", "apidoc/fluxus/lineage/fluxus.lineage.HasLineage", "apidoc/fluxus/lineage/fluxus.lineage.LabelingProducer", "apidoc/fluxus/lineage/fluxus.lineage.LabelingTransformer", "apidoc/fluxus/lineage/fluxus.lineage.LineageOrigin", "apidoc/fluxus/simple/fluxus.simple.SimpleAsyncProducer", "apidoc/fluxus/simple/fluxus.simple.SimpleProducer", "apidoc/fluxus/util/fluxus.util.simplify_repr_attributes", "apidoc/fluxus/viz/base/fluxus.viz.base.FlowStyle", "apidoc/fluxus/viz/base/fluxus.viz.base.TimelineStyle", "apidoc/fluxus/viz/fluxus.viz.FlowDrawer", "apidoc/fluxus/viz/fluxus.viz.FlowGraph", "apidoc/fluxus/viz/fluxus.viz.FlowGraphStyle", "apidoc/fluxus/viz/fluxus.viz.FlowTextStyle", "apidoc/fluxus/viz/fluxus.viz.TimelineDrawer", "apidoc/fluxus/viz/fluxus.viz.TimelineMatplotStyle", "apidoc/fluxus/viz/fluxus.viz.TimelineTextStyle", "apidoc/fluxus/viz/fluxus.viz.base", "contributor_guide/index", "faq", "index", "user_guide/index", "user_guide/introduction_to_fluxus/building_a_flow"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_generated/home.rst", "_generated/release_notes.rst", "api_landing.rst", "apidoc/fluxus.rst", "apidoc/fluxus/core/fluxus.core.AtomicConduit.rst", "apidoc/fluxus/core/fluxus.core.ConcurrentConduit.rst", "apidoc/fluxus/core/fluxus.core.Conduit.rst", "apidoc/fluxus/core/fluxus.core.Processor.rst", "apidoc/fluxus/core/fluxus.core.SerialConduit.rst", "apidoc/fluxus/core/fluxus.core.SerialProcessor.rst", "apidoc/fluxus/core/fluxus.core.SerialSource.rst", "apidoc/fluxus/core/fluxus.core.Source.rst", "apidoc/fluxus/core/fluxus.core.producer.rst", "apidoc/fluxus/core/fluxus.core.transformer.rst", "apidoc/fluxus/core/producer/fluxus.core.producer.BaseProducer.rst", "apidoc/fluxus/core/producer/fluxus.core.producer.ConcurrentProducer.rst", "apidoc/fluxus/core/producer/fluxus.core.producer.SerialProducer.rst", "apidoc/fluxus/core/producer/fluxus.core.producer.SimpleConcurrentProducer.rst", "apidoc/fluxus/core/transformer/fluxus.core.transformer.BaseTransformer.rst", "apidoc/fluxus/core/transformer/fluxus.core.transformer.ConcurrentTransformer.rst", "apidoc/fluxus/core/transformer/fluxus.core.transformer.SerialTransformer.rst", "apidoc/fluxus/core/transformer/fluxus.core.transformer.SimpleConcurrentTransformer.rst", "apidoc/fluxus/fluxus.AsyncConsumer.rst", "apidoc/fluxus/fluxus.AsyncProducer.rst", "apidoc/fluxus/fluxus.AsyncTransformer.rst", "apidoc/fluxus/fluxus.Consumer.rst", "apidoc/fluxus/fluxus.Flow.rst", "apidoc/fluxus/fluxus.FlowWarning.rst", "apidoc/fluxus/fluxus.Passthrough.rst", "apidoc/fluxus/fluxus.Producer.rst", "apidoc/fluxus/fluxus.Transformer.rst", "apidoc/fluxus/fluxus.core.rst", "apidoc/fluxus/fluxus.functional.rst", "apidoc/fluxus/fluxus.lineage.rst", "apidoc/fluxus/fluxus.simple.rst", "apidoc/fluxus/fluxus.util.rst", "apidoc/fluxus/fluxus.viz.rst", "apidoc/fluxus/functional/conduit/fluxus.functional.conduit.DictConsumer.rst", "apidoc/fluxus/functional/conduit/fluxus.functional.conduit.DictProducer.rst", "apidoc/fluxus/functional/conduit/fluxus.functional.conduit.Step.rst", "apidoc/fluxus/functional/fluxus.functional.RunResult.rst", "apidoc/fluxus/functional/fluxus.functional.chain.rst", "apidoc/fluxus/functional/fluxus.functional.conduit.rst", "apidoc/fluxus/functional/fluxus.functional.parallel.rst", "apidoc/fluxus/functional/fluxus.functional.passthrough.rst", "apidoc/fluxus/functional/fluxus.functional.product.rst", "apidoc/fluxus/functional/fluxus.functional.run.rst", "apidoc/fluxus/functional/fluxus.functional.step.rst", "apidoc/fluxus/functional/product/fluxus.functional.product.DictProduct.rst", "apidoc/fluxus/lineage/fluxus.lineage.HasLineage.rst", "apidoc/fluxus/lineage/fluxus.lineage.LabelingProducer.rst", "apidoc/fluxus/lineage/fluxus.lineage.LabelingTransformer.rst", "apidoc/fluxus/lineage/fluxus.lineage.LineageOrigin.rst", "apidoc/fluxus/simple/fluxus.simple.SimpleAsyncProducer.rst", "apidoc/fluxus/simple/fluxus.simple.SimpleProducer.rst", "apidoc/fluxus/util/fluxus.util.simplify_repr_attributes.rst", "apidoc/fluxus/viz/base/fluxus.viz.base.FlowStyle.rst", "apidoc/fluxus/viz/base/fluxus.viz.base.TimelineStyle.rst", "apidoc/fluxus/viz/fluxus.viz.FlowDrawer.rst", "apidoc/fluxus/viz/fluxus.viz.FlowGraph.rst", "apidoc/fluxus/viz/fluxus.viz.FlowGraphStyle.rst", "apidoc/fluxus/viz/fluxus.viz.FlowTextStyle.rst", "apidoc/fluxus/viz/fluxus.viz.TimelineDrawer.rst", "apidoc/fluxus/viz/fluxus.viz.TimelineMatplotStyle.rst", "apidoc/fluxus/viz/fluxus.viz.TimelineTextStyle.rst", "apidoc/fluxus/viz/fluxus.viz.base.rst", "contributor_guide/index.rst", "faq.rst", "index.rst", "user_guide/index.rst", "user_guide/introduction_to_fluxus/building_a_flow.ipynb"], "indexentries": {"_draw() (fluxus.viz.flowdrawer method)": [[58, "fluxus.viz.FlowDrawer._draw", false]], "_draw() (fluxus.viz.timelinedrawer method)": [[62, "fluxus.viz.TimelineDrawer._draw", false]], "aconsume() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.aconsume", false]], "aconsume() (fluxus.consumer method)": [[25, "fluxus.Consumer.aconsume", false]], "aconsume() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.aconsume", false]], "add_note() (fluxus.flowwarning method)": [[27, "fluxus.FlowWarning.add_note", false]], "aiter() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.aiter", false]], "aiter() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.aiter", false]], "aiter() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.aiter", false]], "aiter() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.aiter", false]], "aiter() (fluxus.transformer method)": [[30, "fluxus.Transformer.aiter", false]], "aiter_concurrent_conduits() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.consumer method)": [[25, "fluxus.Consumer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.concurrentconduit method)": [[5, "fluxus.core.ConcurrentConduit.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.conduit method)": [[6, "fluxus.core.Conduit.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.source method)": [[11, "fluxus.core.Source.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.flow method)": [[26, "fluxus.Flow.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.producer method)": [[29, "fluxus.Producer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.aiter_concurrent_conduits", false]], "aiter_concurrent_conduits() (fluxus.transformer method)": [[30, "fluxus.Transformer.aiter_concurrent_conduits", false]], "apply_color_scheme() (fluxus.viz.timelinematplotstyle method)": [[63, "fluxus.viz.TimelineMatplotStyle.apply_color_scheme", false]], "aprocess() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.aprocess", false]], "aprocess() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.aprocess", false]], "aprocess() (fluxus.consumer method)": [[25, "fluxus.Consumer.aprocess", false]], "aprocess() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.aprocess", false]], "aprocess() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.aprocess", false]], "aprocess() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.aprocess", false]], "aprocess() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.aprocess", false]], "aprocess() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.aprocess", false]], "aprocess() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.aprocess", false]], "aprocess() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.aprocess", false]], "aprocess() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.aprocess", false]], "aprocess() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.aprocess", false]], "aprocess() (fluxus.transformer method)": [[30, "fluxus.Transformer.aprocess", false]], "aproduce() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.aproduce", false]], "aproduce() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.aproduce", false]], "aproduce() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.aproduce", false]], "aproduce() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.aproduce", false]], "aproduce() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.aproduce", false]], "aproduce() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.aproduce", false]], "aproduce() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.aproduce", false]], "aproduce() (fluxus.producer method)": [[29, "fluxus.Producer.aproduce", false]], "aproduce() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.aproduce", false]], "aproduce() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.aproduce", false]], "arun() (fluxus.flow method)": [[26, "fluxus.Flow.arun", false]], "asyncconsumer (class in fluxus)": [[22, "fluxus.AsyncConsumer", false]], "asyncproducer (class in fluxus)": [[23, "fluxus.AsyncProducer", false]], "asynctransformer (class in fluxus)": [[24, "fluxus.AsyncTransformer", false]], "atomicconduit (class in fluxus.core)": [[4, "fluxus.core.AtomicConduit", false]], "atransform() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.atransform", false]], "atransform() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.atransform", false]], "atransform() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.atransform", false]], "atransform() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.atransform", false]], "atransform() (fluxus.transformer method)": [[30, "fluxus.Transformer.atransform", false]], "attributes (fluxus.functional.product.dictproduct attribute)": [[48, "fluxus.functional.product.DictProduct.attributes", false]], "ax (fluxus.viz.timelinematplotstyle property)": [[63, "fluxus.viz.TimelineMatplotStyle.ax", false]], "baseproducer (class in fluxus.core.producer)": [[14, "fluxus.core.producer.BaseProducer", false]], "basetransformer (class in fluxus.core.transformer)": [[18, "fluxus.core.transformer.BaseTransformer", false]], "chain() (in module fluxus.functional)": [[41, "fluxus.functional.chain", false]], "chained_conduits (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.chained_conduits", false]], "chained_conduits (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.chained_conduits", false]], "chained_conduits (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.chained_conduits", false]], "chained_conduits (fluxus.consumer property)": [[25, "fluxus.Consumer.chained_conduits", false]], "chained_conduits (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.chained_conduits", false]], "chained_conduits (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.chained_conduits", false]], "chained_conduits (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.chained_conduits", false]], "chained_conduits (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.chained_conduits", false]], "chained_conduits (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.chained_conduits", false]], "chained_conduits (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.chained_conduits", false]], "chained_conduits (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.chained_conduits", false]], "chained_conduits (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.chained_conduits", false]], "chained_conduits (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.chained_conduits", false]], "chained_conduits (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.chained_conduits", false]], "chained_conduits (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.chained_conduits", false]], "chained_conduits (fluxus.passthrough property)": [[28, "fluxus.Passthrough.chained_conduits", false]], "chained_conduits (fluxus.producer property)": [[29, "fluxus.Producer.chained_conduits", false]], "chained_conduits (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.chained_conduits", false]], "chained_conduits (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.chained_conduits", false]], "chained_conduits (fluxus.transformer property)": [[30, "fluxus.Transformer.chained_conduits", false]], "colors (fluxus.viz.flowgraphstyle property)": [[60, "fluxus.viz.FlowGraphStyle.colors", false]], "colors (fluxus.viz.timelinematplotstyle property)": [[63, "fluxus.viz.TimelineMatplotStyle.colors", false]], "column_alignment (fluxus.viz.timelinetextstyle attribute)": [[64, "fluxus.viz.TimelineTextStyle.COLUMN_ALIGNMENT", false]], "column_formats (fluxus.viz.timelinetextstyle attribute)": [[64, "fluxus.viz.TimelineTextStyle.COLUMN_FORMATS", false]], "concurrentconduit (class in fluxus.core)": [[5, "fluxus.core.ConcurrentConduit", false]], "concurrentproducer (class in fluxus.core.producer)": [[15, "fluxus.core.producer.ConcurrentProducer", false]], "concurrenttransformer (class in fluxus.core.transformer)": [[19, "fluxus.core.transformer.ConcurrentTransformer", false]], "conduit (class in fluxus.core)": [[6, "fluxus.core.Conduit", false]], "connections (fluxus.viz.flowgraph attribute)": [[59, "fluxus.viz.FlowGraph.connections", false]], "consume() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.consume", false]], "consume() (fluxus.consumer method)": [[25, "fluxus.Consumer.consume", false]], "consume() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.consume", false]], "consumer (class in fluxus)": [[25, "fluxus.Consumer", false]], "dictconsumer (class in fluxus.functional.conduit)": [[37, "fluxus.functional.conduit.DictConsumer", false]], "dictproducer (class in fluxus.functional.conduit)": [[38, "fluxus.functional.conduit.DictProducer", false]], "dictproduct (class in fluxus.functional.product)": [[48, "fluxus.functional.product.DictProduct", false]], "draw() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.draw", false]], "draw() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.draw", false]], "draw() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.draw", false]], "draw() (fluxus.consumer method)": [[25, "fluxus.Consumer.draw", false]], "draw() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.draw", false]], "draw() (fluxus.core.concurrentconduit method)": [[5, "fluxus.core.ConcurrentConduit.draw", false]], "draw() (fluxus.core.conduit method)": [[6, "fluxus.core.Conduit.draw", false]], "draw() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.draw", false]], "draw() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.draw", false]], "draw() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.draw", false]], "draw() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.draw", false]], "draw() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.draw", false]], "draw() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.draw", false]], "draw() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.draw", false]], "draw() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.draw", false]], "draw() (fluxus.core.source method)": [[11, "fluxus.core.Source.draw", false]], "draw() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.draw", false]], "draw() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.draw", false]], "draw() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.draw", false]], "draw() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.draw", false]], "draw() (fluxus.flow method)": [[26, "fluxus.Flow.draw", false]], "draw() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.draw", false]], "draw() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.draw", false]], "draw() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.draw", false]], "draw() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.draw", false]], "draw() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.draw", false]], "draw() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.draw", false]], "draw() (fluxus.producer method)": [[29, "fluxus.Producer.draw", false]], "draw() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.draw", false]], "draw() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.draw", false]], "draw() (fluxus.transformer method)": [[30, "fluxus.Transformer.draw", false]], "draw() (fluxus.viz.flowdrawer method)": [[58, "fluxus.viz.FlowDrawer.draw", false]], "draw() (fluxus.viz.timelinedrawer method)": [[62, "fluxus.viz.TimelineDrawer.draw", false]], "draw_timeline() (fluxus.functional.runresult method)": [[40, "fluxus.functional.RunResult.draw_timeline", false]], "end_time (fluxus.functional.product.dictproduct attribute)": [[48, "fluxus.functional.product.DictProduct.end_time", false]], "file (fluxus.viz.flowgraphstyle attribute)": [[60, "fluxus.viz.FlowGraphStyle.file", false]], "final_conduit (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.final_conduit", false]], "final_conduit (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.final_conduit", false]], "final_conduit (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.final_conduit", false]], "final_conduit (fluxus.consumer property)": [[25, "fluxus.Consumer.final_conduit", false]], "final_conduit (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.final_conduit", false]], "final_conduit (fluxus.core.concurrentconduit property)": [[5, "fluxus.core.ConcurrentConduit.final_conduit", false]], "final_conduit (fluxus.core.conduit property)": [[6, "fluxus.core.Conduit.final_conduit", false]], "final_conduit (fluxus.core.processor property)": [[7, "fluxus.core.Processor.final_conduit", false]], "final_conduit (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.final_conduit", false]], "final_conduit (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.final_conduit", false]], "final_conduit (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.final_conduit", false]], "final_conduit (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.final_conduit", false]], "final_conduit (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.final_conduit", false]], "final_conduit (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.final_conduit", false]], "final_conduit (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.final_conduit", false]], "final_conduit (fluxus.core.source property)": [[11, "fluxus.core.Source.final_conduit", false]], "final_conduit (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.final_conduit", false]], "final_conduit (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.final_conduit", false]], "final_conduit (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.final_conduit", false]], "final_conduit (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.final_conduit", false]], "final_conduit (fluxus.flow property)": [[26, "fluxus.Flow.final_conduit", false]], "final_conduit (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.final_conduit", false]], "final_conduit (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.final_conduit", false]], "final_conduit (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.final_conduit", false]], "final_conduit (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.final_conduit", false]], "final_conduit (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.final_conduit", false]], "final_conduit (fluxus.passthrough property)": [[28, "fluxus.Passthrough.final_conduit", false]], "final_conduit (fluxus.producer property)": [[29, "fluxus.Producer.final_conduit", false]], "final_conduit (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.final_conduit", false]], "final_conduit (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.final_conduit", false]], "final_conduit (fluxus.transformer property)": [[30, "fluxus.Transformer.final_conduit", false]], "finalize_drawing() (fluxus.viz.base.flowstyle method)": [[56, "fluxus.viz.base.FlowStyle.finalize_drawing", false]], "finalize_drawing() (fluxus.viz.base.timelinestyle method)": [[57, "fluxus.viz.base.TimelineStyle.finalize_drawing", false]], "finalize_drawing() (fluxus.viz.flowgraphstyle method)": [[60, "fluxus.viz.FlowGraphStyle.finalize_drawing", false]], "finalize_drawing() (fluxus.viz.flowtextstyle method)": [[61, "fluxus.viz.FlowTextStyle.finalize_drawing", false]], "finalize_drawing() (fluxus.viz.timelinematplotstyle method)": [[63, "fluxus.viz.TimelineMatplotStyle.finalize_drawing", false]], "finalize_drawing() (fluxus.viz.timelinetextstyle method)": [[64, "fluxus.viz.TimelineTextStyle.finalize_drawing", false]], "flow (class in fluxus)": [[26, "fluxus.Flow", false]], "flowdrawer (class in fluxus.viz)": [[58, "fluxus.viz.FlowDrawer", false]], "flowgraph (class in fluxus.viz)": [[59, "fluxus.viz.FlowGraph", false]], "flowgraphstyle (class in fluxus.viz)": [[60, "fluxus.viz.FlowGraphStyle", false]], "flowstyle (class in fluxus.viz.base)": [[56, "fluxus.viz.base.FlowStyle", false]], "flowtextstyle (class in fluxus.viz)": [[61, "fluxus.viz.FlowTextStyle", false]], "flowwarning": [[27, "fluxus.FlowWarning", false]], "fluxus": [[3, "module-fluxus", false]], "fluxus.core": [[31, "module-fluxus.core", false]], "fluxus.core.producer": [[12, "module-fluxus.core.producer", false]], "fluxus.core.transformer": [[13, "module-fluxus.core.transformer", false]], "fluxus.functional": [[32, "module-fluxus.functional", false]], "fluxus.functional.conduit": [[42, "module-fluxus.functional.conduit", false]], "fluxus.functional.product": [[45, "module-fluxus.functional.product", false]], "fluxus.lineage": [[33, "module-fluxus.lineage", false]], "fluxus.simple": [[34, "module-fluxus.simple", false]], "fluxus.util": [[35, "module-fluxus.util", false]], "fluxus.viz": [[36, "module-fluxus.viz", false]], "fluxus.viz.base": [[65, "module-fluxus.viz.base", false]], "format (fluxus.viz.flowgraphstyle attribute)": [[60, "fluxus.viz.FlowGraphStyle.format", false]], "from_conduit() (fluxus.viz.flowgraph class method)": [[59, "fluxus.viz.FlowGraph.from_conduit", false]], "from_dict() (fluxus.functional.product.dictproduct class method)": [[48, "fluxus.functional.product.DictProduct.from_dict", false]], "function (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.function", false]], "get() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.get", false]], "get_connections() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.get_connections", false]], "get_connections() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.get_connections", false]], "get_connections() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.get_connections", false]], "get_connections() (fluxus.consumer method)": [[25, "fluxus.Consumer.get_connections", false]], "get_connections() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.get_connections", false]], "get_connections() (fluxus.core.concurrentconduit method)": [[5, "fluxus.core.ConcurrentConduit.get_connections", false]], "get_connections() (fluxus.core.conduit method)": [[6, "fluxus.core.Conduit.get_connections", false]], "get_connections() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.get_connections", false]], "get_connections() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.get_connections", false]], "get_connections() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.get_connections", false]], "get_connections() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.get_connections", false]], "get_connections() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.get_connections", false]], "get_connections() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.get_connections", false]], "get_connections() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.get_connections", false]], "get_connections() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.get_connections", false]], "get_connections() (fluxus.core.source method)": [[11, "fluxus.core.Source.get_connections", false]], "get_connections() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.get_connections", false]], "get_connections() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.get_connections", false]], "get_connections() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.get_connections", false]], "get_connections() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.get_connections", false]], "get_connections() (fluxus.flow method)": [[26, "fluxus.Flow.get_connections", false]], "get_connections() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.get_connections", false]], "get_connections() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.get_connections", false]], "get_connections() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.get_connections", false]], "get_connections() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.get_connections", false]], "get_connections() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.get_connections", false]], "get_connections() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.get_connections", false]], "get_connections() (fluxus.producer method)": [[29, "fluxus.Producer.get_connections", false]], "get_connections() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.get_connections", false]], "get_connections() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.get_connections", false]], "get_connections() (fluxus.transformer method)": [[30, "fluxus.Transformer.get_connections", false]], "get_default_style() (fluxus.viz.flowdrawer class method)": [[58, "fluxus.viz.FlowDrawer.get_default_style", false]], "get_default_style() (fluxus.viz.timelinedrawer class method)": [[62, "fluxus.viz.TimelineDrawer.get_default_style", false]], "get_default_style_name() (fluxus.viz.base.flowstyle class method)": [[56, "fluxus.viz.base.FlowStyle.get_default_style_name", false]], "get_default_style_name() (fluxus.viz.base.timelinestyle class method)": [[57, "fluxus.viz.base.TimelineStyle.get_default_style_name", false]], "get_default_style_name() (fluxus.viz.flowgraphstyle class method)": [[60, "fluxus.viz.FlowGraphStyle.get_default_style_name", false]], "get_default_style_name() (fluxus.viz.flowtextstyle class method)": [[61, "fluxus.viz.FlowTextStyle.get_default_style_name", false]], "get_default_style_name() (fluxus.viz.timelinematplotstyle class method)": [[63, "fluxus.viz.TimelineMatplotStyle.get_default_style_name", false]], "get_default_style_name() (fluxus.viz.timelinetextstyle class method)": [[64, "fluxus.viz.TimelineTextStyle.get_default_style_name", false]], "get_final_conduits() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.get_final_conduits", false]], "get_final_conduits() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.get_final_conduits", false]], "get_final_conduits() (fluxus.consumer method)": [[25, "fluxus.Consumer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.get_final_conduits", false]], "get_final_conduits() (fluxus.core.concurrentconduit method)": [[5, "fluxus.core.ConcurrentConduit.get_final_conduits", false]], "get_final_conduits() (fluxus.core.conduit method)": [[6, "fluxus.core.Conduit.get_final_conduits", false]], "get_final_conduits() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.get_final_conduits", false]], "get_final_conduits() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.get_final_conduits", false]], "get_final_conduits() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.get_final_conduits", false]], "get_final_conduits() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.get_final_conduits", false]], "get_final_conduits() (fluxus.core.source method)": [[11, "fluxus.core.Source.get_final_conduits", false]], "get_final_conduits() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.get_final_conduits", false]], "get_final_conduits() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.get_final_conduits", false]], "get_final_conduits() (fluxus.flow method)": [[26, "fluxus.Flow.get_final_conduits", false]], "get_final_conduits() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.get_final_conduits", false]], "get_final_conduits() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.get_final_conduits", false]], "get_final_conduits() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.get_final_conduits", false]], "get_final_conduits() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.get_final_conduits", false]], "get_final_conduits() (fluxus.producer method)": [[29, "fluxus.Producer.get_final_conduits", false]], "get_final_conduits() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.get_final_conduits", false]], "get_final_conduits() (fluxus.transformer method)": [[30, "fluxus.Transformer.get_final_conduits", false]], "get_lineage() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.get_lineage", false]], "get_lineage() (fluxus.lineage.haslineage method)": [[49, "fluxus.lineage.HasLineage.get_lineage", false]], "get_lineage() (fluxus.lineage.lineageorigin method)": [[52, "fluxus.lineage.LineageOrigin.get_lineage", false]], "get_lineage_attributes() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.get_lineage_attributes", false]], "get_lineage_attributes() (fluxus.lineage.haslineage method)": [[49, "fluxus.lineage.HasLineage.get_lineage_attributes", false]], "get_lineage_attributes() (fluxus.lineage.lineageorigin method)": [[52, "fluxus.lineage.LineageOrigin.get_lineage_attributes", false]], "get_named_styles() (fluxus.viz.base.flowstyle class method)": [[56, "fluxus.viz.base.FlowStyle.get_named_styles", false]], "get_named_styles() (fluxus.viz.base.timelinestyle class method)": [[57, "fluxus.viz.base.TimelineStyle.get_named_styles", false]], "get_named_styles() (fluxus.viz.flowdrawer class method)": [[58, "fluxus.viz.FlowDrawer.get_named_styles", false]], "get_named_styles() (fluxus.viz.flowgraphstyle class method)": [[60, "fluxus.viz.FlowGraphStyle.get_named_styles", false]], "get_named_styles() (fluxus.viz.flowtextstyle class method)": [[61, "fluxus.viz.FlowTextStyle.get_named_styles", false]], "get_named_styles() (fluxus.viz.timelinedrawer class method)": [[62, "fluxus.viz.TimelineDrawer.get_named_styles", false]], "get_named_styles() (fluxus.viz.timelinematplotstyle class method)": [[63, "fluxus.viz.TimelineMatplotStyle.get_named_styles", false]], "get_named_styles() (fluxus.viz.timelinetextstyle class method)": [[64, "fluxus.viz.TimelineTextStyle.get_named_styles", false]], "get_outputs() (fluxus.functional.runresult method)": [[40, "fluxus.functional.RunResult.get_outputs", false]], "get_outputs_per_path() (fluxus.functional.runresult method)": [[40, "fluxus.functional.RunResult.get_outputs_per_path", false]], "get_renderer() (fluxus.viz.timelinematplotstyle method)": [[63, "fluxus.viz.TimelineMatplotStyle.get_renderer", false]], "get_repr_attributes() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.consumer method)": [[25, "fluxus.Consumer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.get_repr_attributes", false]], "get_repr_attributes() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.get_repr_attributes", false]], "get_repr_attributes() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.get_repr_attributes", false]], "get_repr_attributes() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.get_repr_attributes", false]], "get_repr_attributes() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.get_repr_attributes", false]], "get_repr_attributes() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.get_repr_attributes", false]], "get_repr_attributes() (fluxus.producer method)": [[29, "fluxus.Producer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.get_repr_attributes", false]], "get_repr_attributes() (fluxus.transformer method)": [[30, "fluxus.Transformer.get_repr_attributes", false]], "get_style() (fluxus.viz.flowdrawer class method)": [[58, "fluxus.viz.FlowDrawer.get_style", false]], "get_style() (fluxus.viz.timelinedrawer class method)": [[62, "fluxus.viz.TimelineDrawer.get_style", false]], "get_style_classes() (fluxus.viz.flowdrawer class method)": [[58, "fluxus.viz.FlowDrawer.get_style_classes", false]], "get_style_classes() (fluxus.viz.timelinedrawer class method)": [[62, "fluxus.viz.TimelineDrawer.get_style_classes", false]], "get_style_kwargs() (fluxus.viz.flowdrawer method)": [[58, "fluxus.viz.FlowDrawer.get_style_kwargs", false]], "get_style_kwargs() (fluxus.viz.timelinedrawer method)": [[62, "fluxus.viz.TimelineDrawer.get_style_kwargs", false]], "haslineage (class in fluxus.lineage)": [[49, "fluxus.lineage.HasLineage", false]], "input_type (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.input_type", false]], "input_type (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.input_type", false]], "input_type (fluxus.consumer property)": [[25, "fluxus.Consumer.input_type", false]], "input_type (fluxus.core.processor property)": [[7, "fluxus.core.Processor.input_type", false]], "input_type (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.input_type", false]], "input_type (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.input_type", false]], "input_type (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.input_type", false]], "input_type (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.input_type", false]], "input_type (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.input_type", false]], "input_type (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.input_type", false]], "input_type (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.input_type", false]], "input_type (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.input_type", false]], "input_type (fluxus.transformer property)": [[30, "fluxus.Transformer.input_type", false]], "is_atomic (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.is_atomic", false]], "is_atomic (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.is_atomic", false]], "is_atomic (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.is_atomic", false]], "is_atomic (fluxus.consumer property)": [[25, "fluxus.Consumer.is_atomic", false]], "is_atomic (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.is_atomic", false]], "is_atomic (fluxus.core.concurrentconduit property)": [[5, "fluxus.core.ConcurrentConduit.is_atomic", false]], "is_atomic (fluxus.core.conduit property)": [[6, "fluxus.core.Conduit.is_atomic", false]], "is_atomic (fluxus.core.processor property)": [[7, "fluxus.core.Processor.is_atomic", false]], "is_atomic (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.is_atomic", false]], "is_atomic (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.is_atomic", false]], "is_atomic (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.is_atomic", false]], "is_atomic (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.is_atomic", false]], "is_atomic (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.is_atomic", false]], "is_atomic (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.is_atomic", false]], "is_atomic (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.is_atomic", false]], "is_atomic (fluxus.core.source property)": [[11, "fluxus.core.Source.is_atomic", false]], "is_atomic (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.is_atomic", false]], "is_atomic (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.is_atomic", false]], "is_atomic (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.is_atomic", false]], "is_atomic (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.is_atomic", false]], "is_atomic (fluxus.flow property)": [[26, "fluxus.Flow.is_atomic", false]], "is_atomic (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.is_atomic", false]], "is_atomic (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.is_atomic", false]], "is_atomic (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.is_atomic", false]], "is_atomic (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.is_atomic", false]], "is_atomic (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.is_atomic", false]], "is_atomic (fluxus.passthrough property)": [[28, "fluxus.Passthrough.is_atomic", false]], "is_atomic (fluxus.producer property)": [[29, "fluxus.Producer.is_atomic", false]], "is_atomic (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.is_atomic", false]], "is_atomic (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.is_atomic", false]], "is_atomic (fluxus.transformer property)": [[30, "fluxus.Transformer.is_atomic", false]], "is_chained (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.is_chained", false]], "is_chained (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.is_chained", false]], "is_chained (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.is_chained", false]], "is_chained (fluxus.consumer property)": [[25, "fluxus.Consumer.is_chained", false]], "is_chained (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.is_chained", false]], "is_chained (fluxus.core.concurrentconduit property)": [[5, "fluxus.core.ConcurrentConduit.is_chained", false]], "is_chained (fluxus.core.conduit property)": [[6, "fluxus.core.Conduit.is_chained", false]], "is_chained (fluxus.core.processor property)": [[7, "fluxus.core.Processor.is_chained", false]], "is_chained (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.is_chained", false]], "is_chained (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.is_chained", false]], "is_chained (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.is_chained", false]], "is_chained (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.is_chained", false]], "is_chained (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.is_chained", false]], "is_chained (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.is_chained", false]], "is_chained (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.is_chained", false]], "is_chained (fluxus.core.source property)": [[11, "fluxus.core.Source.is_chained", false]], "is_chained (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.is_chained", false]], "is_chained (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.is_chained", false]], "is_chained (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.is_chained", false]], "is_chained (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.is_chained", false]], "is_chained (fluxus.flow property)": [[26, "fluxus.Flow.is_chained", false]], "is_chained (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.is_chained", false]], "is_chained (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.is_chained", false]], "is_chained (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.is_chained", false]], "is_chained (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.is_chained", false]], "is_chained (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.is_chained", false]], "is_chained (fluxus.passthrough property)": [[28, "fluxus.Passthrough.is_chained", false]], "is_chained (fluxus.producer property)": [[29, "fluxus.Producer.is_chained", false]], "is_chained (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.is_chained", false]], "is_chained (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.is_chained", false]], "is_chained (fluxus.transformer property)": [[30, "fluxus.Transformer.is_chained", false]], "is_concurrent (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.is_concurrent", false]], "is_concurrent (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.is_concurrent", false]], "is_concurrent (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.is_concurrent", false]], "is_concurrent (fluxus.consumer property)": [[25, "fluxus.Consumer.is_concurrent", false]], "is_concurrent (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.is_concurrent", false]], "is_concurrent (fluxus.core.concurrentconduit property)": [[5, "fluxus.core.ConcurrentConduit.is_concurrent", false]], "is_concurrent (fluxus.core.conduit property)": [[6, "fluxus.core.Conduit.is_concurrent", false]], "is_concurrent (fluxus.core.processor property)": [[7, "fluxus.core.Processor.is_concurrent", false]], "is_concurrent (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.is_concurrent", false]], "is_concurrent (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.is_concurrent", false]], "is_concurrent (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.is_concurrent", false]], "is_concurrent (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.is_concurrent", false]], "is_concurrent (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.is_concurrent", false]], "is_concurrent (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.is_concurrent", false]], "is_concurrent (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.is_concurrent", false]], "is_concurrent (fluxus.core.source property)": [[11, "fluxus.core.Source.is_concurrent", false]], "is_concurrent (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.is_concurrent", false]], "is_concurrent (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.is_concurrent", false]], "is_concurrent (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.is_concurrent", false]], "is_concurrent (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.is_concurrent", false]], "is_concurrent (fluxus.flow property)": [[26, "fluxus.Flow.is_concurrent", false]], "is_concurrent (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.is_concurrent", false]], "is_concurrent (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.is_concurrent", false]], "is_concurrent (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.is_concurrent", false]], "is_concurrent (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.is_concurrent", false]], "is_concurrent (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.is_concurrent", false]], "is_concurrent (fluxus.passthrough property)": [[28, "fluxus.Passthrough.is_concurrent", false]], "is_concurrent (fluxus.producer property)": [[29, "fluxus.Producer.is_concurrent", false]], "is_concurrent (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.is_concurrent", false]], "is_concurrent (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.is_concurrent", false]], "is_concurrent (fluxus.transformer property)": [[30, "fluxus.Transformer.is_concurrent", false]], "is_valid_source() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.is_valid_source", false]], "is_valid_source() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.is_valid_source", false]], "is_valid_source() (fluxus.consumer method)": [[25, "fluxus.Consumer.is_valid_source", false]], "is_valid_source() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.is_valid_source", false]], "is_valid_source() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.is_valid_source", false]], "is_valid_source() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.is_valid_source", false]], "is_valid_source() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.is_valid_source", false]], "is_valid_source() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.is_valid_source", false]], "is_valid_source() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.is_valid_source", false]], "is_valid_source() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.is_valid_source", false]], "is_valid_source() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.is_valid_source", false]], "is_valid_source() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.is_valid_source", false]], "is_valid_source() (fluxus.transformer method)": [[30, "fluxus.Transformer.is_valid_source", false]], "items() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.items", false]], "iter() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.iter", false]], "iter() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.iter", false]], "iter() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.iter", false]], "iter() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.iter", false]], "iter() (fluxus.transformer method)": [[30, "fluxus.Transformer.iter", false]], "iter_concurrent_conduits() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.consumer method)": [[25, "fluxus.Consumer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.concurrentconduit method)": [[5, "fluxus.core.ConcurrentConduit.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.conduit method)": [[6, "fluxus.core.Conduit.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.source method)": [[11, "fluxus.core.Source.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.flow method)": [[26, "fluxus.Flow.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.producer method)": [[29, "fluxus.Producer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.iter_concurrent_conduits", false]], "iter_concurrent_conduits() (fluxus.transformer method)": [[30, "fluxus.Transformer.iter_concurrent_conduits", false]], "key_end_time (fluxus.functional.product.dictproduct attribute)": [[48, "fluxus.functional.product.DictProduct.KEY_END_TIME", false]], "key_start_time (fluxus.functional.product.dictproduct attribute)": [[48, "fluxus.functional.product.DictProduct.KEY_START_TIME", false]], "keys() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.keys", false]], "kwargs (fluxus.functional.conduit.step attribute)": [[39, "fluxus.functional.conduit.Step.kwargs", false]], "label() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.label", false]], "label() (fluxus.lineage.haslineage method)": [[49, "fluxus.lineage.HasLineage.label", false]], "label() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.label", false]], "label() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.label", false]], "label() (fluxus.lineage.lineageorigin method)": [[52, "fluxus.lineage.LineageOrigin.label", false]], "labelingproducer (class in fluxus.lineage)": [[50, "fluxus.lineage.LabelingProducer", false]], "labelingtransformer (class in fluxus.lineage)": [[51, "fluxus.lineage.LabelingTransformer", false]], "lineageorigin (class in fluxus.lineage)": [[52, "fluxus.lineage.LineageOrigin", false]], "module": [[3, "module-fluxus", false], [12, "module-fluxus.core.producer", false], [13, "module-fluxus.core.transformer", false], [31, "module-fluxus.core", false], [32, "module-fluxus.functional", false], [33, "module-fluxus.lineage", false], [34, "module-fluxus.simple", false], [35, "module-fluxus.util", false], [36, "module-fluxus.viz", false], [42, "module-fluxus.functional.conduit", false], [45, "module-fluxus.functional.product", false], [65, "module-fluxus.viz.base", false]], "n_concurrent_conduits (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.consumer property)": [[25, "fluxus.Consumer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.concurrentconduit property)": [[5, "fluxus.core.ConcurrentConduit.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.conduit property)": [[6, "fluxus.core.Conduit.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.processor property)": [[7, "fluxus.core.Processor.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.source property)": [[11, "fluxus.core.Source.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.flow property)": [[26, "fluxus.Flow.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.passthrough property)": [[28, "fluxus.Passthrough.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.producer property)": [[29, "fluxus.Producer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.n_concurrent_conduits", false]], "n_concurrent_conduits (fluxus.transformer property)": [[30, "fluxus.Transformer.n_concurrent_conduits", false]], "name (fluxus.asyncconsumer property)": [[22, "fluxus.AsyncConsumer.name", false]], "name (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.name", false]], "name (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.name", false]], "name (fluxus.consumer property)": [[25, "fluxus.Consumer.name", false]], "name (fluxus.core.atomicconduit property)": [[4, "fluxus.core.AtomicConduit.name", false]], "name (fluxus.core.concurrentconduit property)": [[5, "fluxus.core.ConcurrentConduit.name", false]], "name (fluxus.core.conduit property)": [[6, "fluxus.core.Conduit.name", false]], "name (fluxus.core.processor property)": [[7, "fluxus.core.Processor.name", false]], "name (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.name", false]], "name (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.name", false]], "name (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.name", false]], "name (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.name", false]], "name (fluxus.core.serialconduit property)": [[8, "fluxus.core.SerialConduit.name", false]], "name (fluxus.core.serialprocessor property)": [[9, "fluxus.core.SerialProcessor.name", false]], "name (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.name", false]], "name (fluxus.core.source property)": [[11, "fluxus.core.Source.name", false]], "name (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.name", false]], "name (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.name", false]], "name (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.name", false]], "name (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.name", false]], "name (fluxus.flow property)": [[26, "fluxus.Flow.name", false]], "name (fluxus.functional.conduit.dictconsumer property)": [[37, "fluxus.functional.conduit.DictConsumer.name", false]], "name (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.name", false]], "name (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.name", false]], "name (fluxus.functional.product.dictproduct attribute)": [[48, "fluxus.functional.product.DictProduct.name", false]], "name (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.name", false]], "name (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.name", false]], "name (fluxus.passthrough property)": [[28, "fluxus.Passthrough.name", false]], "name (fluxus.producer property)": [[29, "fluxus.Producer.name", false]], "name (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.name", false]], "name (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.name", false]], "name (fluxus.transformer property)": [[30, "fluxus.Transformer.name", false]], "out (fluxus.viz.flowtextstyle attribute)": [[61, "fluxus.viz.FlowTextStyle.out", false]], "out (fluxus.viz.timelinetextstyle attribute)": [[64, "fluxus.viz.TimelineTextStyle.out", false]], "parallel() (in module fluxus.functional)": [[43, "fluxus.functional.parallel", false]], "passthrough (class in fluxus)": [[28, "fluxus.Passthrough", false]], "passthrough() (in module fluxus.functional)": [[44, "fluxus.functional.passthrough", false]], "precursor (fluxus.functional.product.dictproduct property)": [[48, "fluxus.functional.product.DictProduct.precursor", false]], "precursor (fluxus.lineage.haslineage property)": [[49, "fluxus.lineage.HasLineage.precursor", false]], "precursor (fluxus.lineage.lineageorigin property)": [[52, "fluxus.lineage.LineageOrigin.precursor", false]], "process() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.process", false]], "process() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.process", false]], "process() (fluxus.consumer method)": [[25, "fluxus.Consumer.process", false]], "process() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.process", false]], "process() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.process", false]], "process() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.process", false]], "process() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.process", false]], "process() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.process", false]], "process() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.process", false]], "process() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.process", false]], "process() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.process", false]], "process() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.process", false]], "process() (fluxus.transformer method)": [[30, "fluxus.Transformer.process", false]], "processor (class in fluxus.core)": [[7, "fluxus.core.Processor", false]], "produce() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.produce", false]], "produce() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.produce", false]], "produce() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.produce", false]], "produce() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.produce", false]], "produce() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.produce", false]], "produce() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.produce", false]], "produce() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.produce", false]], "produce() (fluxus.producer method)": [[29, "fluxus.Producer.produce", false]], "produce() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.produce", false]], "produce() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.produce", false]], "producer (class in fluxus)": [[29, "fluxus.Producer", false]], "producer (fluxus.functional.conduit.dictproducer attribute)": [[38, "fluxus.functional.conduit.DictProducer.producer", false]], "producers (fluxus.core.producer.simpleconcurrentproducer attribute)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.producers", false]], "product_attributes (fluxus.functional.product.dictproduct property)": [[48, "fluxus.functional.product.DictProduct.product_attributes", false]], "product_attributes (fluxus.lineage.haslineage property)": [[49, "fluxus.lineage.HasLineage.product_attributes", false]], "product_attributes (fluxus.lineage.lineageorigin property)": [[52, "fluxus.lineage.LineageOrigin.product_attributes", false]], "product_labels (fluxus.functional.product.dictproduct property)": [[48, "fluxus.functional.product.DictProduct.product_labels", false]], "product_labels (fluxus.lineage.haslineage property)": [[49, "fluxus.lineage.HasLineage.product_labels", false]], "product_labels (fluxus.lineage.lineageorigin property)": [[52, "fluxus.lineage.LineageOrigin.product_labels", false]], "product_name (fluxus.functional.product.dictproduct property)": [[48, "fluxus.functional.product.DictProduct.product_name", false]], "product_name (fluxus.lineage.haslineage property)": [[49, "fluxus.lineage.HasLineage.product_name", false]], "product_name (fluxus.lineage.lineageorigin property)": [[52, "fluxus.lineage.LineageOrigin.product_name", false]], "product_type (fluxus.asyncproducer property)": [[23, "fluxus.AsyncProducer.product_type", false]], "product_type (fluxus.asynctransformer property)": [[24, "fluxus.AsyncTransformer.product_type", false]], "product_type (fluxus.core.producer.baseproducer property)": [[14, "fluxus.core.producer.BaseProducer.product_type", false]], "product_type (fluxus.core.producer.concurrentproducer property)": [[15, "fluxus.core.producer.ConcurrentProducer.product_type", false]], "product_type (fluxus.core.producer.serialproducer property)": [[16, "fluxus.core.producer.SerialProducer.product_type", false]], "product_type (fluxus.core.producer.simpleconcurrentproducer property)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.product_type", false]], "product_type (fluxus.core.serialsource property)": [[10, "fluxus.core.SerialSource.product_type", false]], "product_type (fluxus.core.source property)": [[11, "fluxus.core.Source.product_type", false]], "product_type (fluxus.core.transformer.basetransformer property)": [[18, "fluxus.core.transformer.BaseTransformer.product_type", false]], "product_type (fluxus.core.transformer.concurrenttransformer property)": [[19, "fluxus.core.transformer.ConcurrentTransformer.product_type", false]], "product_type (fluxus.core.transformer.serialtransformer property)": [[20, "fluxus.core.transformer.SerialTransformer.product_type", false]], "product_type (fluxus.core.transformer.simpleconcurrenttransformer property)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.product_type", false]], "product_type (fluxus.functional.conduit.dictproducer property)": [[38, "fluxus.functional.conduit.DictProducer.product_type", false]], "product_type (fluxus.functional.conduit.step property)": [[39, "fluxus.functional.conduit.Step.product_type", false]], "product_type (fluxus.lineage.labelingproducer property)": [[50, "fluxus.lineage.LabelingProducer.product_type", false]], "product_type (fluxus.lineage.labelingtransformer property)": [[51, "fluxus.lineage.LabelingTransformer.product_type", false]], "product_type (fluxus.producer property)": [[29, "fluxus.Producer.product_type", false]], "product_type (fluxus.simple.simpleasyncproducer property)": [[53, "fluxus.simple.SimpleAsyncProducer.product_type", false]], "product_type (fluxus.simple.simpleproducer property)": [[54, "fluxus.simple.SimpleProducer.product_type", false]], "product_type (fluxus.transformer property)": [[30, "fluxus.Transformer.product_type", false]], "products (fluxus.simple.simpleasyncproducer attribute)": [[53, "fluxus.simple.SimpleAsyncProducer.products", false]], "products (fluxus.simple.simpleproducer attribute)": [[54, "fluxus.simple.SimpleProducer.products", false]], "render_flow() (fluxus.viz.base.flowstyle method)": [[56, "fluxus.viz.base.FlowStyle.render_flow", false]], "render_flow() (fluxus.viz.flowgraphstyle method)": [[60, "fluxus.viz.FlowGraphStyle.render_flow", false]], "render_flow() (fluxus.viz.flowtextstyle method)": [[61, "fluxus.viz.FlowTextStyle.render_flow", false]], "render_timeline() (fluxus.viz.base.timelinestyle method)": [[57, "fluxus.viz.base.TimelineStyle.render_timeline", false]], "render_timeline() (fluxus.viz.timelinematplotstyle method)": [[63, "fluxus.viz.TimelineMatplotStyle.render_timeline", false]], "render_timeline() (fluxus.viz.timelinetextstyle method)": [[64, "fluxus.viz.TimelineTextStyle.render_timeline", false]], "run() (fluxus.flow method)": [[26, "fluxus.Flow.run", false]], "run() (in module fluxus.functional)": [[46, "fluxus.functional.run", false]], "runresult (class in fluxus.functional)": [[40, "fluxus.functional.RunResult", false]], "serialconduit (class in fluxus.core)": [[8, "fluxus.core.SerialConduit", false]], "serialprocessor (class in fluxus.core)": [[9, "fluxus.core.SerialProcessor", false]], "serialproducer (class in fluxus.core.producer)": [[16, "fluxus.core.producer.SerialProducer", false]], "serialsource (class in fluxus.core)": [[10, "fluxus.core.SerialSource", false]], "serialtransformer (class in fluxus.core.transformer)": [[20, "fluxus.core.transformer.SerialTransformer", false]], "simpleasyncproducer (class in fluxus.simple)": [[53, "fluxus.simple.SimpleAsyncProducer", false]], "simpleconcurrentproducer (class in fluxus.core.producer)": [[17, "fluxus.core.producer.SimpleConcurrentProducer", false]], "simpleconcurrenttransformer (class in fluxus.core.transformer)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer", false]], "simpleproducer (class in fluxus.simple)": [[54, "fluxus.simple.SimpleProducer", false]], "simplify_repr_attributes() (in module fluxus.util)": [[55, "fluxus.util.simplify_repr_attributes", false]], "single_conduits (fluxus.viz.flowgraph attribute)": [[59, "fluxus.viz.FlowGraph.single_conduits", false]], "source (class in fluxus.core)": [[11, "fluxus.core.Source", false]], "start_drawing() (fluxus.viz.base.flowstyle method)": [[56, "fluxus.viz.base.FlowStyle.start_drawing", false]], "start_drawing() (fluxus.viz.base.timelinestyle method)": [[57, "fluxus.viz.base.TimelineStyle.start_drawing", false]], "start_drawing() (fluxus.viz.flowgraphstyle method)": [[60, "fluxus.viz.FlowGraphStyle.start_drawing", false]], "start_drawing() (fluxus.viz.flowtextstyle method)": [[61, "fluxus.viz.FlowTextStyle.start_drawing", false]], "start_drawing() (fluxus.viz.timelinematplotstyle method)": [[63, "fluxus.viz.TimelineMatplotStyle.start_drawing", false]], "start_drawing() (fluxus.viz.timelinetextstyle method)": [[64, "fluxus.viz.TimelineTextStyle.start_drawing", false]], "start_time (fluxus.functional.product.dictproduct attribute)": [[48, "fluxus.functional.product.DictProduct.start_time", false]], "step (class in fluxus.functional.conduit)": [[39, "fluxus.functional.conduit.Step", false]], "step() (in module fluxus.functional)": [[47, "fluxus.functional.step", false]], "style (fluxus.viz.flowdrawer attribute)": [[58, "fluxus.viz.FlowDrawer.style", false]], "style (fluxus.viz.timelinedrawer attribute)": [[62, "fluxus.viz.TimelineDrawer.style", false]], "table_header (fluxus.viz.timelinetextstyle attribute)": [[64, "fluxus.viz.TimelineTextStyle.TABLE_HEADER", false]], "timelinedrawer (class in fluxus.viz)": [[62, "fluxus.viz.TimelineDrawer", false]], "timelinematplotstyle (class in fluxus.viz)": [[63, "fluxus.viz.TimelineMatplotStyle", false]], "timelinestyle (class in fluxus.viz.base)": [[57, "fluxus.viz.base.TimelineStyle", false]], "timelinetextstyle (class in fluxus.viz)": [[64, "fluxus.viz.TimelineTextStyle", false]], "timestamps (fluxus.functional.conduit.dictconsumer attribute)": [[37, "fluxus.functional.conduit.DictConsumer.timestamps", false]], "to_dict() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.to_dict", false]], "to_dot() (fluxus.viz.flowgraph method)": [[59, "fluxus.viz.FlowGraph.to_dot", false]], "to_expression() (fluxus.asyncconsumer method)": [[22, "fluxus.AsyncConsumer.to_expression", false]], "to_expression() (fluxus.asyncproducer method)": [[23, "fluxus.AsyncProducer.to_expression", false]], "to_expression() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.to_expression", false]], "to_expression() (fluxus.consumer method)": [[25, "fluxus.Consumer.to_expression", false]], "to_expression() (fluxus.core.atomicconduit method)": [[4, "fluxus.core.AtomicConduit.to_expression", false]], "to_expression() (fluxus.core.concurrentconduit method)": [[5, "fluxus.core.ConcurrentConduit.to_expression", false]], "to_expression() (fluxus.core.conduit method)": [[6, "fluxus.core.Conduit.to_expression", false]], "to_expression() (fluxus.core.processor method)": [[7, "fluxus.core.Processor.to_expression", false]], "to_expression() (fluxus.core.producer.baseproducer method)": [[14, "fluxus.core.producer.BaseProducer.to_expression", false]], "to_expression() (fluxus.core.producer.concurrentproducer method)": [[15, "fluxus.core.producer.ConcurrentProducer.to_expression", false]], "to_expression() (fluxus.core.producer.serialproducer method)": [[16, "fluxus.core.producer.SerialProducer.to_expression", false]], "to_expression() (fluxus.core.producer.simpleconcurrentproducer method)": [[17, "fluxus.core.producer.SimpleConcurrentProducer.to_expression", false]], "to_expression() (fluxus.core.serialconduit method)": [[8, "fluxus.core.SerialConduit.to_expression", false]], "to_expression() (fluxus.core.serialprocessor method)": [[9, "fluxus.core.SerialProcessor.to_expression", false]], "to_expression() (fluxus.core.serialsource method)": [[10, "fluxus.core.SerialSource.to_expression", false]], "to_expression() (fluxus.core.source method)": [[11, "fluxus.core.Source.to_expression", false]], "to_expression() (fluxus.core.transformer.basetransformer method)": [[18, "fluxus.core.transformer.BaseTransformer.to_expression", false]], "to_expression() (fluxus.core.transformer.concurrenttransformer method)": [[19, "fluxus.core.transformer.ConcurrentTransformer.to_expression", false]], "to_expression() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.to_expression", false]], "to_expression() (fluxus.core.transformer.simpleconcurrenttransformer method)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.to_expression", false]], "to_expression() (fluxus.flow method)": [[26, "fluxus.Flow.to_expression", false]], "to_expression() (fluxus.functional.conduit.dictconsumer method)": [[37, "fluxus.functional.conduit.DictConsumer.to_expression", false]], "to_expression() (fluxus.functional.conduit.dictproducer method)": [[38, "fluxus.functional.conduit.DictProducer.to_expression", false]], "to_expression() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.to_expression", false]], "to_expression() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.to_expression", false]], "to_expression() (fluxus.functional.runresult method)": [[40, "fluxus.functional.RunResult.to_expression", false]], "to_expression() (fluxus.lineage.labelingproducer method)": [[50, "fluxus.lineage.LabelingProducer.to_expression", false]], "to_expression() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.to_expression", false]], "to_expression() (fluxus.passthrough method)": [[28, "fluxus.Passthrough.to_expression", false]], "to_expression() (fluxus.producer method)": [[29, "fluxus.Producer.to_expression", false]], "to_expression() (fluxus.simple.simpleasyncproducer method)": [[53, "fluxus.simple.SimpleAsyncProducer.to_expression", false]], "to_expression() (fluxus.simple.simpleproducer method)": [[54, "fluxus.simple.SimpleProducer.to_expression", false]], "to_expression() (fluxus.transformer method)": [[30, "fluxus.Transformer.to_expression", false]], "to_frame() (fluxus.functional.runresult method)": [[40, "fluxus.functional.RunResult.to_frame", false]], "transform() (fluxus.asynctransformer method)": [[24, "fluxus.AsyncTransformer.transform", false]], "transform() (fluxus.core.transformer.serialtransformer method)": [[20, "fluxus.core.transformer.SerialTransformer.transform", false]], "transform() (fluxus.functional.conduit.step method)": [[39, "fluxus.functional.conduit.Step.transform", false]], "transform() (fluxus.lineage.labelingtransformer method)": [[51, "fluxus.lineage.LabelingTransformer.transform", false]], "transform() (fluxus.transformer method)": [[30, "fluxus.Transformer.transform", false]], "transformer (class in fluxus)": [[30, "fluxus.Transformer", false]], "transformers (fluxus.core.transformer.simpleconcurrenttransformer attribute)": [[21, "fluxus.core.transformer.SimpleConcurrentTransformer.transformers", false]], "values() (fluxus.functional.product.dictproduct method)": [[48, "fluxus.functional.product.DictProduct.values", false]], "width (fluxus.viz.flowtextstyle attribute)": [[61, "fluxus.viz.FlowTextStyle.width", false]], "width (fluxus.viz.timelinetextstyle attribute)": [[64, "fluxus.viz.TimelineTextStyle.width", false]], "with_traceback() (fluxus.flowwarning method)": [[27, "fluxus.FlowWarning.with_traceback", false]]}, "objects": {"": [[3, 0, 0, "-", "fluxus"]], "fluxus": [[22, 1, 1, "", "AsyncConsumer"], [23, 1, 1, "", "AsyncProducer"], [24, 1, 1, "", "AsyncTransformer"], [25, 1, 1, "", "Consumer"], [26, 1, 1, "", "Flow"], [27, 4, 1, "", "FlowWarning"], [28, 1, 1, "", "Passthrough"], [29, 1, 1, "", "Producer"], [30, 1, 1, "", "Transformer"], [31, 0, 0, "-", "core"], [32, 0, 0, "-", "functional"], [33, 0, 0, "-", "lineage"], [34, 0, 0, "-", "simple"], [35, 0, 0, "-", "util"], [36, 0, 0, "-", "viz"]], "fluxus.AsyncConsumer": [[22, 2, 1, "", "aconsume"], [22, 2, 1, "", "aiter_concurrent_conduits"], [22, 2, 1, "", "aprocess"], [22, 3, 1, "", "chained_conduits"], [22, 2, 1, "", "consume"], [22, 2, 1, "", "draw"], [22, 3, 1, "", "final_conduit"], [22, 2, 1, "", "get_connections"], [22, 2, 1, "", "get_final_conduits"], [22, 2, 1, "", "get_repr_attributes"], [22, 3, 1, "", "input_type"], [22, 3, 1, "", "is_atomic"], [22, 3, 1, "", "is_chained"], [22, 3, 1, "", "is_concurrent"], [22, 2, 1, "", "is_valid_source"], [22, 2, 1, "", "iter_concurrent_conduits"], [22, 3, 1, "", "n_concurrent_conduits"], [22, 3, 1, "", "name"], [22, 2, 1, "", "process"], [22, 2, 1, "", "to_expression"]], "fluxus.AsyncProducer": [[23, 2, 1, "", "aiter_concurrent_conduits"], [23, 2, 1, "", "aproduce"], [23, 3, 1, "", "chained_conduits"], [23, 2, 1, "", "draw"], [23, 3, 1, "", "final_conduit"], [23, 2, 1, "", "get_connections"], [23, 2, 1, "", "get_final_conduits"], [23, 2, 1, "", "get_repr_attributes"], [23, 3, 1, "", "is_atomic"], [23, 3, 1, "", "is_chained"], [23, 3, 1, "", "is_concurrent"], [23, 2, 1, "", "iter_concurrent_conduits"], [23, 3, 1, "", "n_concurrent_conduits"], [23, 3, 1, "", "name"], [23, 2, 1, "", "produce"], [23, 3, 1, "", "product_type"], [23, 2, 1, "", "to_expression"]], "fluxus.AsyncTransformer": [[24, 2, 1, "", "aiter"], [24, 2, 1, "", "aiter_concurrent_conduits"], [24, 2, 1, "", "aprocess"], [24, 2, 1, "", "atransform"], [24, 3, 1, "", "chained_conduits"], [24, 2, 1, "", "draw"], [24, 3, 1, "", "final_conduit"], [24, 2, 1, "", "get_connections"], [24, 2, 1, "", "get_final_conduits"], [24, 2, 1, "", "get_repr_attributes"], [24, 3, 1, "", "input_type"], [24, 3, 1, "", "is_atomic"], [24, 3, 1, "", "is_chained"], [24, 3, 1, "", "is_concurrent"], [24, 2, 1, "", "is_valid_source"], [24, 2, 1, "", "iter"], [24, 2, 1, "", "iter_concurrent_conduits"], [24, 3, 1, "", "n_concurrent_conduits"], [24, 3, 1, "", "name"], [24, 2, 1, "", "process"], [24, 3, 1, "", "product_type"], [24, 2, 1, "", "to_expression"], [24, 2, 1, "", "transform"]], "fluxus.Consumer": [[25, 2, 1, "", "aconsume"], [25, 2, 1, "", "aiter_concurrent_conduits"], [25, 2, 1, "", "aprocess"], [25, 3, 1, "", "chained_conduits"], [25, 2, 1, "", "consume"], [25, 2, 1, "", "draw"], [25, 3, 1, "", "final_conduit"], [25, 2, 1, "", "get_connections"], [25, 2, 1, "", "get_final_conduits"], [25, 2, 1, "", "get_repr_attributes"], [25, 3, 1, "", "input_type"], [25, 3, 1, "", "is_atomic"], [25, 3, 1, "", "is_chained"], [25, 3, 1, "", "is_concurrent"], [25, 2, 1, "", "is_valid_source"], [25, 2, 1, "", "iter_concurrent_conduits"], [25, 3, 1, "", "n_concurrent_conduits"], [25, 3, 1, "", "name"], [25, 2, 1, "", "process"], [25, 2, 1, "", "to_expression"]], "fluxus.Flow": [[26, 2, 1, "", "aiter_concurrent_conduits"], [26, 2, 1, "", "arun"], [26, 2, 1, "", "draw"], [26, 3, 1, "", "final_conduit"], [26, 2, 1, "", "get_connections"], [26, 2, 1, "", "get_final_conduits"], [26, 3, 1, "", "is_atomic"], [26, 3, 1, "", "is_chained"], [26, 3, 1, "", "is_concurrent"], [26, 2, 1, "", "iter_concurrent_conduits"], [26, 3, 1, "", "n_concurrent_conduits"], [26, 3, 1, "", "name"], [26, 2, 1, "", "run"], [26, 2, 1, "", "to_expression"]], "fluxus.FlowWarning": [[27, 2, 1, "", "add_note"], [27, 2, 1, "", "with_traceback"]], "fluxus.Passthrough": [[28, 2, 1, "", "aiter_concurrent_conduits"], [28, 3, 1, "", "chained_conduits"], [28, 2, 1, "", "draw"], [28, 3, 1, "", "final_conduit"], [28, 2, 1, "", "get_connections"], [28, 2, 1, "", "get_final_conduits"], [28, 2, 1, "", "get_repr_attributes"], [28, 3, 1, "", "is_atomic"], [28, 3, 1, "", "is_chained"], [28, 3, 1, "", "is_concurrent"], [28, 2, 1, "", "iter_concurrent_conduits"], [28, 3, 1, "", "n_concurrent_conduits"], [28, 3, 1, "", "name"], [28, 2, 1, "", "to_expression"]], "fluxus.Producer": [[29, 2, 1, "", "aiter_concurrent_conduits"], [29, 2, 1, "", "aproduce"], [29, 3, 1, "", "chained_conduits"], [29, 2, 1, "", "draw"], [29, 3, 1, "", "final_conduit"], [29, 2, 1, "", "get_connections"], [29, 2, 1, "", "get_final_conduits"], [29, 2, 1, "", "get_repr_attributes"], [29, 3, 1, "", "is_atomic"], [29, 3, 1, "", "is_chained"], [29, 3, 1, "", "is_concurrent"], [29, 2, 1, "", "iter_concurrent_conduits"], [29, 3, 1, "", "n_concurrent_conduits"], [29, 3, 1, "", "name"], [29, 2, 1, "", "produce"], [29, 3, 1, "", "product_type"], [29, 2, 1, "", "to_expression"]], "fluxus.Transformer": [[30, 2, 1, "", "aiter"], [30, 2, 1, "", "aiter_concurrent_conduits"], [30, 2, 1, "", "aprocess"], [30, 2, 1, "", "atransform"], [30, 3, 1, "", "chained_conduits"], [30, 2, 1, "", "draw"], [30, 3, 1, "", "final_conduit"], [30, 2, 1, "", "get_connections"], [30, 2, 1, "", "get_final_conduits"], [30, 2, 1, "", "get_repr_attributes"], [30, 3, 1, "", "input_type"], [30, 3, 1, "", "is_atomic"], [30, 3, 1, "", "is_chained"], [30, 3, 1, "", "is_concurrent"], [30, 2, 1, "", "is_valid_source"], [30, 2, 1, "", "iter"], [30, 2, 1, "", "iter_concurrent_conduits"], [30, 3, 1, "", "n_concurrent_conduits"], [30, 3, 1, "", "name"], [30, 2, 1, "", "process"], [30, 3, 1, "", "product_type"], [30, 2, 1, "", "to_expression"], [30, 2, 1, "", "transform"]], "fluxus.core": [[4, 1, 1, "", "AtomicConduit"], [5, 1, 1, "", "ConcurrentConduit"], [6, 1, 1, "", "Conduit"], [7, 1, 1, "", "Processor"], [8, 1, 1, "", "SerialConduit"], [9, 1, 1, "", "SerialProcessor"], [10, 1, 1, "", "SerialSource"], [11, 1, 1, "", "Source"], [12, 0, 0, "-", "producer"], [13, 0, 0, "-", "transformer"]], "fluxus.core.AtomicConduit": [[4, 2, 1, "", "aiter_concurrent_conduits"], [4, 3, 1, "", "chained_conduits"], [4, 2, 1, "", "draw"], [4, 3, 1, "", "final_conduit"], [4, 2, 1, "", "get_connections"], [4, 2, 1, "", "get_final_conduits"], [4, 2, 1, "", "get_repr_attributes"], [4, 3, 1, "", "is_atomic"], [4, 3, 1, "", "is_chained"], [4, 3, 1, "", "is_concurrent"], [4, 2, 1, "", "iter_concurrent_conduits"], [4, 3, 1, "", "n_concurrent_conduits"], [4, 3, 1, "", "name"], [4, 2, 1, "", "to_expression"]], "fluxus.core.ConcurrentConduit": [[5, 2, 1, "", "aiter_concurrent_conduits"], [5, 2, 1, "", "draw"], [5, 3, 1, "", "final_conduit"], [5, 2, 1, "", "get_connections"], [5, 2, 1, "", "get_final_conduits"], [5, 3, 1, "", "is_atomic"], [5, 3, 1, "", "is_chained"], [5, 3, 1, "", "is_concurrent"], [5, 2, 1, "", "iter_concurrent_conduits"], [5, 3, 1, "", "n_concurrent_conduits"], [5, 3, 1, "", "name"], [5, 2, 1, "", "to_expression"]], "fluxus.core.Conduit": [[6, 2, 1, "", "aiter_concurrent_conduits"], [6, 2, 1, "", "draw"], [6, 3, 1, "", "final_conduit"], [6, 2, 1, "", "get_connections"], [6, 2, 1, "", "get_final_conduits"], [6, 3, 1, "", "is_atomic"], [6, 3, 1, "", "is_chained"], [6, 3, 1, "", "is_concurrent"], [6, 2, 1, "", "iter_concurrent_conduits"], [6, 3, 1, "", "n_concurrent_conduits"], [6, 3, 1, "", "name"], [6, 2, 1, "", "to_expression"]], "fluxus.core.Processor": [[7, 2, 1, "", "aiter_concurrent_conduits"], [7, 2, 1, "", "aprocess"], [7, 2, 1, "", "draw"], [7, 3, 1, "", "final_conduit"], [7, 2, 1, "", "get_connections"], [7, 2, 1, "", "get_final_conduits"], [7, 3, 1, "", "input_type"], [7, 3, 1, "", "is_atomic"], [7, 3, 1, "", "is_chained"], [7, 3, 1, "", "is_concurrent"], [7, 2, 1, "", "is_valid_source"], [7, 2, 1, "", "iter_concurrent_conduits"], [7, 3, 1, "", "n_concurrent_conduits"], [7, 3, 1, "", "name"], [7, 2, 1, "", "process"], [7, 2, 1, "", "to_expression"]], "fluxus.core.SerialConduit": [[8, 2, 1, "", "aiter_concurrent_conduits"], [8, 3, 1, "", "chained_conduits"], [8, 2, 1, "", "draw"], [8, 3, 1, "", "final_conduit"], [8, 2, 1, "", "get_connections"], [8, 2, 1, "", "get_final_conduits"], [8, 2, 1, "", "get_repr_attributes"], [8, 3, 1, "", "is_atomic"], [8, 3, 1, "", "is_chained"], [8, 3, 1, "", "is_concurrent"], [8, 2, 1, "", "iter_concurrent_conduits"], [8, 3, 1, "", "n_concurrent_conduits"], [8, 3, 1, "", "name"], [8, 2, 1, "", "to_expression"]], "fluxus.core.SerialProcessor": [[9, 2, 1, "", "aiter_concurrent_conduits"], [9, 2, 1, "", "aprocess"], [9, 3, 1, "", "chained_conduits"], [9, 2, 1, "", "draw"], [9, 3, 1, "", "final_conduit"], [9, 2, 1, "", "get_connections"], [9, 2, 1, "", "get_final_conduits"], [9, 2, 1, "", "get_repr_attributes"], [9, 3, 1, "", "input_type"], [9, 3, 1, "", "is_atomic"], [9, 3, 1, "", "is_chained"], [9, 3, 1, "", "is_concurrent"], [9, 2, 1, "", "is_valid_source"], [9, 2, 1, "", "iter_concurrent_conduits"], [9, 3, 1, "", "n_concurrent_conduits"], [9, 3, 1, "", "name"], [9, 2, 1, "", "process"], [9, 2, 1, "", "to_expression"]], "fluxus.core.SerialSource": [[10, 2, 1, "", "aiter_concurrent_conduits"], [10, 3, 1, "", "chained_conduits"], [10, 2, 1, "", "draw"], [10, 3, 1, "", "final_conduit"], [10, 2, 1, "", "get_connections"], [10, 2, 1, "", "get_final_conduits"], [10, 2, 1, "", "get_repr_attributes"], [10, 3, 1, "", "is_atomic"], [10, 3, 1, "", "is_chained"], [10, 3, 1, "", "is_concurrent"], [10, 2, 1, "", "iter_concurrent_conduits"], [10, 3, 1, "", "n_concurrent_conduits"], [10, 3, 1, "", "name"], [10, 3, 1, "", "product_type"], [10, 2, 1, "", "to_expression"]], "fluxus.core.Source": [[11, 2, 1, "", "aiter_concurrent_conduits"], [11, 2, 1, "", "draw"], [11, 3, 1, "", "final_conduit"], [11, 2, 1, "", "get_connections"], [11, 2, 1, "", "get_final_conduits"], [11, 3, 1, "", "is_atomic"], [11, 3, 1, "", "is_chained"], [11, 3, 1, "", "is_concurrent"], [11, 2, 1, "", "iter_concurrent_conduits"], [11, 3, 1, "", "n_concurrent_conduits"], [11, 3, 1, "", "name"], [11, 3, 1, "", "product_type"], [11, 2, 1, "", "to_expression"]], "fluxus.core.producer": [[14, 1, 1, "", "BaseProducer"], [15, 1, 1, "", "ConcurrentProducer"], [16, 1, 1, "", "SerialProducer"], [17, 1, 1, "", "SimpleConcurrentProducer"]], "fluxus.core.producer.BaseProducer": [[14, 2, 1, "", "aiter_concurrent_conduits"], [14, 2, 1, "", "aproduce"], [14, 2, 1, "", "draw"], [14, 3, 1, "", "final_conduit"], [14, 2, 1, "", "get_connections"], [14, 2, 1, "", "get_final_conduits"], [14, 3, 1, "", "is_atomic"], [14, 3, 1, "", "is_chained"], [14, 3, 1, "", "is_concurrent"], [14, 2, 1, "", "iter_concurrent_conduits"], [14, 3, 1, "", "n_concurrent_conduits"], [14, 3, 1, "", "name"], [14, 2, 1, "", "produce"], [14, 3, 1, "", "product_type"], [14, 2, 1, "", "to_expression"]], "fluxus.core.producer.ConcurrentProducer": [[15, 2, 1, "", "aiter_concurrent_conduits"], [15, 2, 1, "", "aproduce"], [15, 2, 1, "", "draw"], [15, 3, 1, "", "final_conduit"], [15, 2, 1, "", "get_connections"], [15, 2, 1, "", "get_final_conduits"], [15, 3, 1, "", "is_atomic"], [15, 3, 1, "", "is_chained"], [15, 3, 1, "", "is_concurrent"], [15, 2, 1, "", "iter_concurrent_conduits"], [15, 3, 1, "", "n_concurrent_conduits"], [15, 3, 1, "", "name"], [15, 2, 1, "", "produce"], [15, 3, 1, "", "product_type"], [15, 2, 1, "", "to_expression"]], "fluxus.core.producer.SerialProducer": [[16, 2, 1, "", "aiter_concurrent_conduits"], [16, 2, 1, "", "aproduce"], [16, 3, 1, "", "chained_conduits"], [16, 2, 1, "", "draw"], [16, 3, 1, "", "final_conduit"], [16, 2, 1, "", "get_connections"], [16, 2, 1, "", "get_final_conduits"], [16, 2, 1, "", "get_repr_attributes"], [16, 3, 1, "", "is_atomic"], [16, 3, 1, "", "is_chained"], [16, 3, 1, "", "is_concurrent"], [16, 2, 1, "", "iter_concurrent_conduits"], [16, 3, 1, "", "n_concurrent_conduits"], [16, 3, 1, "", "name"], [16, 2, 1, "", "produce"], [16, 3, 1, "", "product_type"], [16, 2, 1, "", "to_expression"]], "fluxus.core.producer.SimpleConcurrentProducer": [[17, 2, 1, "", "aiter_concurrent_conduits"], [17, 2, 1, "", "aproduce"], [17, 2, 1, "", "draw"], [17, 3, 1, "", "final_conduit"], [17, 2, 1, "", "get_connections"], [17, 2, 1, "", "get_final_conduits"], [17, 3, 1, "", "is_atomic"], [17, 3, 1, "", "is_chained"], [17, 3, 1, "", "is_concurrent"], [17, 2, 1, "", "iter_concurrent_conduits"], [17, 3, 1, "", "n_concurrent_conduits"], [17, 3, 1, "", "name"], [17, 2, 1, "", "produce"], [17, 5, 1, "", "producers"], [17, 3, 1, "", "product_type"], [17, 2, 1, "", "to_expression"]], "fluxus.core.transformer": [[18, 1, 1, "", "BaseTransformer"], [19, 1, 1, "", "ConcurrentTransformer"], [20, 1, 1, "", "SerialTransformer"], [21, 1, 1, "", "SimpleConcurrentTransformer"]], "fluxus.core.transformer.BaseTransformer": [[18, 2, 1, "", "aiter_concurrent_conduits"], [18, 2, 1, "", "aprocess"], [18, 2, 1, "", "draw"], [18, 3, 1, "", "final_conduit"], [18, 2, 1, "", "get_connections"], [18, 2, 1, "", "get_final_conduits"], [18, 3, 1, "", "input_type"], [18, 3, 1, "", "is_atomic"], [18, 3, 1, "", "is_chained"], [18, 3, 1, "", "is_concurrent"], [18, 2, 1, "", "is_valid_source"], [18, 2, 1, "", "iter_concurrent_conduits"], [18, 3, 1, "", "n_concurrent_conduits"], [18, 3, 1, "", "name"], [18, 2, 1, "", "process"], [18, 3, 1, "", "product_type"], [18, 2, 1, "", "to_expression"]], "fluxus.core.transformer.ConcurrentTransformer": [[19, 2, 1, "", "aiter_concurrent_conduits"], [19, 2, 1, "", "aprocess"], [19, 2, 1, "", "draw"], [19, 3, 1, "", "final_conduit"], [19, 2, 1, "", "get_connections"], [19, 2, 1, "", "get_final_conduits"], [19, 3, 1, "", "input_type"], [19, 3, 1, "", "is_atomic"], [19, 3, 1, "", "is_chained"], [19, 3, 1, "", "is_concurrent"], [19, 2, 1, "", "is_valid_source"], [19, 2, 1, "", "iter_concurrent_conduits"], [19, 3, 1, "", "n_concurrent_conduits"], [19, 3, 1, "", "name"], [19, 2, 1, "", "process"], [19, 3, 1, "", "product_type"], [19, 2, 1, "", "to_expression"]], "fluxus.core.transformer.SerialTransformer": [[20, 2, 1, "", "aiter"], [20, 2, 1, "", "aiter_concurrent_conduits"], [20, 2, 1, "", "aprocess"], [20, 2, 1, "", "atransform"], [20, 3, 1, "", "chained_conduits"], [20, 2, 1, "", "draw"], [20, 3, 1, "", "final_conduit"], [20, 2, 1, "", "get_connections"], [20, 2, 1, "", "get_final_conduits"], [20, 2, 1, "", "get_repr_attributes"], [20, 3, 1, "", "input_type"], [20, 3, 1, "", "is_atomic"], [20, 3, 1, "", "is_chained"], [20, 3, 1, "", "is_concurrent"], [20, 2, 1, "", "is_valid_source"], [20, 2, 1, "", "iter"], [20, 2, 1, "", "iter_concurrent_conduits"], [20, 3, 1, "", "n_concurrent_conduits"], [20, 3, 1, "", "name"], [20, 2, 1, "", "process"], [20, 3, 1, "", "product_type"], [20, 2, 1, "", "to_expression"], [20, 2, 1, "", "transform"]], "fluxus.core.transformer.SimpleConcurrentTransformer": [[21, 2, 1, "", "aiter_concurrent_conduits"], [21, 2, 1, "", "aprocess"], [21, 2, 1, "", "draw"], [21, 3, 1, "", "final_conduit"], [21, 2, 1, "", "get_connections"], [21, 2, 1, "", "get_final_conduits"], [21, 3, 1, "", "input_type"], [21, 3, 1, "", "is_atomic"], [21, 3, 1, "", "is_chained"], [21, 3, 1, "", "is_concurrent"], [21, 2, 1, "", "is_valid_source"], [21, 2, 1, "", "iter_concurrent_conduits"], [21, 3, 1, "", "n_concurrent_conduits"], [21, 3, 1, "", "name"], [21, 2, 1, "", "process"], [21, 3, 1, "", "product_type"], [21, 2, 1, "", "to_expression"], [21, 5, 1, "", "transformers"]], "fluxus.functional": [[40, 1, 1, "", "RunResult"], [41, 6, 1, "", "chain"], [42, 0, 0, "-", "conduit"], [43, 6, 1, "", "parallel"], [44, 6, 1, "", "passthrough"], [45, 0, 0, "-", "product"], [46, 6, 1, "", "run"], [47, 6, 1, "", "step"]], "fluxus.functional.RunResult": [[40, 2, 1, "", "draw_timeline"], [40, 2, 1, "", "get_outputs"], [40, 2, 1, "", "get_outputs_per_path"], [40, 2, 1, "", "to_expression"], [40, 2, 1, "", "to_frame"]], "fluxus.functional.conduit": [[37, 1, 1, "", "DictConsumer"], [38, 1, 1, "", "DictProducer"], [39, 1, 1, "", "Step"]], "fluxus.functional.conduit.DictConsumer": [[37, 2, 1, "", "aconsume"], [37, 2, 1, "", "aiter_concurrent_conduits"], [37, 2, 1, "", "aprocess"], [37, 3, 1, "", "chained_conduits"], [37, 2, 1, "", "consume"], [37, 2, 1, "", "draw"], [37, 3, 1, "", "final_conduit"], [37, 2, 1, "", "get_connections"], [37, 2, 1, "", "get_final_conduits"], [37, 2, 1, "", "get_repr_attributes"], [37, 3, 1, "", "input_type"], [37, 3, 1, "", "is_atomic"], [37, 3, 1, "", "is_chained"], [37, 3, 1, "", "is_concurrent"], [37, 2, 1, "", "is_valid_source"], [37, 2, 1, "", "iter_concurrent_conduits"], [37, 3, 1, "", "n_concurrent_conduits"], [37, 3, 1, "", "name"], [37, 2, 1, "", "process"], [37, 5, 1, "", "timestamps"], [37, 2, 1, "", "to_expression"]], "fluxus.functional.conduit.DictProducer": [[38, 2, 1, "", "aiter_concurrent_conduits"], [38, 2, 1, "", "aproduce"], [38, 3, 1, "", "chained_conduits"], [38, 2, 1, "", "draw"], [38, 3, 1, "", "final_conduit"], [38, 2, 1, "", "get_connections"], [38, 2, 1, "", "get_final_conduits"], [38, 2, 1, "", "get_repr_attributes"], [38, 3, 1, "", "is_atomic"], [38, 3, 1, "", "is_chained"], [38, 3, 1, "", "is_concurrent"], [38, 2, 1, "", "iter_concurrent_conduits"], [38, 3, 1, "", "n_concurrent_conduits"], [38, 3, 1, "", "name"], [38, 2, 1, "", "produce"], [38, 5, 1, "", "producer"], [38, 3, 1, "", "product_type"], [38, 2, 1, "", "to_expression"]], "fluxus.functional.conduit.Step": [[39, 2, 1, "", "aiter"], [39, 2, 1, "", "aiter_concurrent_conduits"], [39, 2, 1, "", "aprocess"], [39, 2, 1, "", "atransform"], [39, 3, 1, "", "chained_conduits"], [39, 2, 1, "", "draw"], [39, 3, 1, "", "final_conduit"], [39, 3, 1, "", "function"], [39, 2, 1, "", "get_connections"], [39, 2, 1, "", "get_final_conduits"], [39, 2, 1, "", "get_repr_attributes"], [39, 3, 1, "", "input_type"], [39, 3, 1, "", "is_atomic"], [39, 3, 1, "", "is_chained"], [39, 3, 1, "", "is_concurrent"], [39, 2, 1, "", "is_valid_source"], [39, 2, 1, "", "iter"], [39, 2, 1, "", "iter_concurrent_conduits"], [39, 5, 1, "", "kwargs"], [39, 3, 1, "", "n_concurrent_conduits"], [39, 3, 1, "", "name"], [39, 2, 1, "", "process"], [39, 3, 1, "", "product_type"], [39, 2, 1, "", "to_expression"], [39, 2, 1, "", "transform"]], "fluxus.functional.product": [[48, 1, 1, "", "DictProduct"]], "fluxus.functional.product.DictProduct": [[48, 5, 1, "", "KEY_END_TIME"], [48, 5, 1, "", "KEY_START_TIME"], [48, 5, 1, "", "attributes"], [48, 5, 1, "", "end_time"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "get"], [48, 2, 1, "", "get_lineage"], [48, 2, 1, "", "get_lineage_attributes"], [48, 2, 1, "", "items"], [48, 2, 1, "", "keys"], [48, 2, 1, "", "label"], [48, 5, 1, "", "name"], [48, 3, 1, "", "precursor"], [48, 3, 1, "", "product_attributes"], [48, 3, 1, "", "product_labels"], [48, 3, 1, "", "product_name"], [48, 5, 1, "", "start_time"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_expression"], [48, 2, 1, "", "values"]], "fluxus.lineage": [[49, 1, 1, "", "HasLineage"], [50, 1, 1, "", "LabelingProducer"], [51, 1, 1, "", "LabelingTransformer"], [52, 1, 1, "", "LineageOrigin"]], "fluxus.lineage.HasLineage": [[49, 2, 1, "", "get_lineage"], [49, 2, 1, "", "get_lineage_attributes"], [49, 2, 1, "", "label"], [49, 3, 1, "", "precursor"], [49, 3, 1, "", "product_attributes"], [49, 3, 1, "", "product_labels"], [49, 3, 1, "", "product_name"]], "fluxus.lineage.LabelingProducer": [[50, 2, 1, "", "aiter_concurrent_conduits"], [50, 2, 1, "", "aproduce"], [50, 3, 1, "", "chained_conduits"], [50, 2, 1, "", "draw"], [50, 3, 1, "", "final_conduit"], [50, 2, 1, "", "get_connections"], [50, 2, 1, "", "get_final_conduits"], [50, 2, 1, "", "get_repr_attributes"], [50, 3, 1, "", "is_atomic"], [50, 3, 1, "", "is_chained"], [50, 3, 1, "", "is_concurrent"], [50, 2, 1, "", "iter_concurrent_conduits"], [50, 2, 1, "", "label"], [50, 3, 1, "", "n_concurrent_conduits"], [50, 3, 1, "", "name"], [50, 2, 1, "", "produce"], [50, 3, 1, "", "product_type"], [50, 2, 1, "", "to_expression"]], "fluxus.lineage.LabelingTransformer": [[51, 2, 1, "", "aiter"], [51, 2, 1, "", "aiter_concurrent_conduits"], [51, 2, 1, "", "aprocess"], [51, 2, 1, "", "atransform"], [51, 3, 1, "", "chained_conduits"], [51, 2, 1, "", "draw"], [51, 3, 1, "", "final_conduit"], [51, 2, 1, "", "get_connections"], [51, 2, 1, "", "get_final_conduits"], [51, 2, 1, "", "get_repr_attributes"], [51, 3, 1, "", "input_type"], [51, 3, 1, "", "is_atomic"], [51, 3, 1, "", "is_chained"], [51, 3, 1, "", "is_concurrent"], [51, 2, 1, "", "is_valid_source"], [51, 2, 1, "", "iter"], [51, 2, 1, "", "iter_concurrent_conduits"], [51, 2, 1, "", "label"], [51, 3, 1, "", "n_concurrent_conduits"], [51, 3, 1, "", "name"], [51, 2, 1, "", "process"], [51, 3, 1, "", "product_type"], [51, 2, 1, "", "to_expression"], [51, 2, 1, "", "transform"]], "fluxus.lineage.LineageOrigin": [[52, 2, 1, "", "get_lineage"], [52, 2, 1, "", "get_lineage_attributes"], [52, 2, 1, "", "label"], [52, 3, 1, "", "precursor"], [52, 3, 1, "", "product_attributes"], [52, 3, 1, "", "product_labels"], [52, 3, 1, "", "product_name"]], "fluxus.simple": [[53, 1, 1, "", "SimpleAsyncProducer"], [54, 1, 1, "", "SimpleProducer"]], "fluxus.simple.SimpleAsyncProducer": [[53, 2, 1, "", "aiter_concurrent_conduits"], [53, 2, 1, "", "aproduce"], [53, 3, 1, "", "chained_conduits"], [53, 2, 1, "", "draw"], [53, 3, 1, "", "final_conduit"], [53, 2, 1, "", "get_connections"], [53, 2, 1, "", "get_final_conduits"], [53, 2, 1, "", "get_repr_attributes"], [53, 3, 1, "", "is_atomic"], [53, 3, 1, "", "is_chained"], [53, 3, 1, "", "is_concurrent"], [53, 2, 1, "", "iter_concurrent_conduits"], [53, 3, 1, "", "n_concurrent_conduits"], [53, 3, 1, "", "name"], [53, 2, 1, "", "produce"], [53, 3, 1, "", "product_type"], [53, 5, 1, "", "products"], [53, 2, 1, "", "to_expression"]], "fluxus.simple.SimpleProducer": [[54, 2, 1, "", "aiter_concurrent_conduits"], [54, 2, 1, "", "aproduce"], [54, 3, 1, "", "chained_conduits"], [54, 2, 1, "", "draw"], [54, 3, 1, "", "final_conduit"], [54, 2, 1, "", "get_connections"], [54, 2, 1, "", "get_final_conduits"], [54, 2, 1, "", "get_repr_attributes"], [54, 3, 1, "", "is_atomic"], [54, 3, 1, "", "is_chained"], [54, 3, 1, "", "is_concurrent"], [54, 2, 1, "", "iter_concurrent_conduits"], [54, 3, 1, "", "n_concurrent_conduits"], [54, 3, 1, "", "name"], [54, 2, 1, "", "produce"], [54, 3, 1, "", "product_type"], [54, 5, 1, "", "products"], [54, 2, 1, "", "to_expression"]], "fluxus.util": [[55, 6, 1, "", "simplify_repr_attributes"]], "fluxus.viz": [[58, 1, 1, "", "FlowDrawer"], [59, 1, 1, "", "FlowGraph"], [60, 1, 1, "", "FlowGraphStyle"], [61, 1, 1, "", "FlowTextStyle"], [62, 1, 1, "", "TimelineDrawer"], [63, 1, 1, "", "TimelineMatplotStyle"], [64, 1, 1, "", "TimelineTextStyle"], [65, 0, 0, "-", "base"]], "fluxus.viz.FlowDrawer": [[58, 2, 1, "", "_draw"], [58, 2, 1, "", "draw"], [58, 2, 1, "", "get_default_style"], [58, 2, 1, "", "get_named_styles"], [58, 2, 1, "", "get_style"], [58, 2, 1, "", "get_style_classes"], [58, 2, 1, "", "get_style_kwargs"], [58, 5, 1, "", "style"]], "fluxus.viz.FlowGraph": [[59, 5, 1, "", "connections"], [59, 2, 1, "", "from_conduit"], [59, 5, 1, "", "single_conduits"], [59, 2, 1, "", "to_dot"]], "fluxus.viz.FlowGraphStyle": [[60, 3, 1, "", "colors"], [60, 5, 1, "", "file"], [60, 2, 1, "", "finalize_drawing"], [60, 5, 1, "", "format"], [60, 2, 1, "", "get_default_style_name"], [60, 2, 1, "", "get_named_styles"], [60, 2, 1, "", "render_flow"], [60, 2, 1, "", "start_drawing"]], "fluxus.viz.FlowTextStyle": [[61, 2, 1, "", "finalize_drawing"], [61, 2, 1, "", "get_default_style_name"], [61, 2, 1, "", "get_named_styles"], [61, 5, 1, "", "out"], [61, 2, 1, "", "render_flow"], [61, 2, 1, "", "start_drawing"], [61, 5, 1, "", "width"]], "fluxus.viz.TimelineDrawer": [[62, 2, 1, "", "_draw"], [62, 2, 1, "", "draw"], [62, 2, 1, "", "get_default_style"], [62, 2, 1, "", "get_named_styles"], [62, 2, 1, "", "get_style"], [62, 2, 1, "", "get_style_classes"], [62, 2, 1, "", "get_style_kwargs"], [62, 5, 1, "", "style"]], "fluxus.viz.TimelineMatplotStyle": [[63, 2, 1, "", "apply_color_scheme"], [63, 3, 1, "", "ax"], [63, 3, 1, "", "colors"], [63, 2, 1, "", "finalize_drawing"], [63, 2, 1, "", "get_default_style_name"], [63, 2, 1, "", "get_named_styles"], [63, 2, 1, "", "get_renderer"], [63, 2, 1, "", "render_timeline"], [63, 2, 1, "", "start_drawing"]], "fluxus.viz.TimelineTextStyle": [[64, 5, 1, "", "COLUMN_ALIGNMENT"], [64, 5, 1, "", "COLUMN_FORMATS"], [64, 5, 1, "", "TABLE_HEADER"], [64, 2, 1, "", "finalize_drawing"], [64, 2, 1, "", "get_default_style_name"], [64, 2, 1, "", "get_named_styles"], [64, 5, 1, "", "out"], [64, 2, 1, "", "render_timeline"], [64, 2, 1, "", "start_drawing"], [64, 5, 1, "", "width"]], "fluxus.viz.base": [[56, 1, 1, "", "FlowStyle"], [57, 1, 1, "", "TimelineStyle"]], "fluxus.viz.base.FlowStyle": [[56, 2, 1, "", "finalize_drawing"], [56, 2, 1, "", "get_default_style_name"], [56, 2, 1, "", "get_named_styles"], [56, 2, 1, "", "render_flow"], [56, 2, 1, "", "start_drawing"]], "fluxus.viz.base.TimelineStyle": [[57, 2, 1, "", "finalize_drawing"], [57, 2, 1, "", "get_default_style_name"], [57, 2, 1, "", "get_named_styles"], [57, 2, 1, "", "render_timeline"], [57, 2, 1, "", "start_drawing"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:exception", "5": "py:attribute", "6": "py:function"}, "terms": {"": [0, 3, 17, 39, 48, 49, 52, 64, 67, 70], "0": [0, 68], "1": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 32, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 70], "10": [32, 70], "100": 70, "11": [32, 70], "12": 70, "13": [32, 70], "14": [32, 70], "15": [55, 70], "16": [46, 70], "17": 70, "2": [0, 32, 40, 41, 43, 44, 46, 47, 48, 49, 51, 52, 70], "25": 70, "3": [0, 32, 40, 41, 43, 44, 46, 47, 50, 70], "340": 49, "36": 70, "4": [32, 41, 43, 44, 46, 47, 70], "45": 70, "5": [32, 46, 47, 59, 70], "6": [47, 70], "64": 70, "7": [59, 70], "8": 70, "80": [61, 64], "9": 70, "940": 49, "A": [5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 37, 38, 39, 40, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 70], "As": [39, 49, 50, 51], "At": 43, "By": [0, 16, 20, 23, 25, 29, 30, 38, 50, 51, 53, 54], "For": [0, 3, 4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 66, 70], "If": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 40, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 70], "In": 70, "It": [0, 3, 16, 22, 23, 24, 29, 44, 67], "Its": 0, "Or": 0, "Such": 33, "The": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 67], "There": [66, 70], "These": [0, 3, 31, 70], "To": [0, 40, 49, 52, 69, 70], "With": 0, "_": 70, "__init__": [49, 70], "_draw": [58, 62], "_function": 39, "_function_or_data": 47, "_name": [39, 47], "_transformer_bas": 70, "a4": 59, "abc": [48, 70], "abcmeta": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64], "abl": 33, "about": 68, "abov": [0, 70], "abstract": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 49, 50, 51, 52, 56, 57], "accept": 47, "access": [0, 40], "accord": 63, "accur": 69, "achiev": [0, 70], "aconsum": [22, 25, 37, 70], "across": [0, 40, 69], "activ": 0, "acycl": 0, "ad": [0, 48, 49, 50, 51, 69], "add": [0, 48, 49, 50, 51, 52, 64, 66, 67], "add_not": 27, "add_on": [32, 39], "add_thre": 32, "add_three_or_f": 32, "add_two": 32, "addit": [0, 33, 39, 41, 43, 44, 46, 47, 49, 63, 64, 69], "address": [0, 66], "advanc": [0, 66], "affect": 44, "after": [48, 49, 52, 63], "against": 0, "aggreg": [0, 67], "ai": 67, "aiter": [20, 24, 30, 39, 51], "aiter_concurrent_conduit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "align": 64, "all": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 42, 43, 44, 47, 50, 51, 53, 54, 55, 58, 59, 62, 63, 66, 70], "allow": [0, 3, 39, 43, 67, 70], "along": [0, 32, 33, 40], "alreadi": [48, 49, 52, 70], "also": [0, 3, 33, 44, 49, 66, 67, 70], "altern": [32, 70], "an": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 62, 63, 64, 66, 69, 70], "analysi": 67, "ani": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 69], "annot": 0, "anoth": [0, 44, 70], "anyth": 0, "anywher": [48, 49, 52], "apach": 0, "api": [0, 2, 32, 42, 45, 67, 68, 70], "appear": [48, 49, 52], "appli": [0, 39, 41, 44, 47, 66, 70], "applic": [0, 67], "apply_color_schem": 63, "appreci": 0, "approach": 0, "aprocess": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 51], "aproduc": [14, 15, 16, 17, 23, 29, 38, 50, 53, 54, 70], "ar": [0, 28, 31, 32, 33, 39, 40, 42, 43, 47, 48, 49, 52, 60, 61, 66, 69, 70], "arbitrari": [39, 47, 48, 50, 51], "architectur": 31, "area": 69, "arg": 28, "argument": [39, 43, 46, 47, 48, 49, 52, 63, 64, 70], "artkit": [0, 32, 66], "arun": [22, 23, 24, 26, 37, 38, 39, 53, 70], "ascend": [48, 49, 52], "associ": [47, 60, 61], "async": [4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 50, 51, 53, 54, 70], "asyncconsum": [3, 37, 70], "asyncdoublingtransform": 70, "asynchron": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 47, 50, 51, 53, 54], "asyncio": [67, 70], "asynciter": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 47, 50, 51, 53, 54, 70], "asyncnumberconsum": 70, "asyncnumberproduc": 70, "asyncproduc": [3, 38, 53, 70], "asyncsquaretransform": 70, "asynctransform": [3, 39, 70], "atom": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "atomicconduit": [25, 29, 30], "atransform": [20, 24, 30, 39, 51, 70], "attach": 7, "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 70], "automat": 0, "avail": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 58, 61, 62, 63, 64, 70], "awai": 0, "await": [38, 39, 47, 70], "ax": 63, "b": [40, 43, 44, 46, 47, 48, 49, 50, 51, 52], "background": [59, 63], "bar": 63, "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 39, 40, 47, 48, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 67, 70], "baseexcept": 27, "baseproduc": [15, 16, 17, 41, 43, 46], "basetransform": [19, 20, 21, 41, 43, 46], "basic": 35, "bcg": [0, 66, 67], "bcgx": 0, "becaus": 0, "been": [0, 50, 51], "befor": [69, 70], "behind": [67, 70], "benefit": [69, 70], "ber_lon": 49, "berlin": 49, "better": [48, 49, 52], "between": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 50, 51, 53, 54, 59, 70], "bin": 0, "blank": 64, "block": [0, 22, 23, 24, 37, 38, 39, 53, 70], "bonjour": 0, "bool": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 46, 50, 51, 53, 54], "boolean": 55, "both": [48, 67], "bound": [49, 50, 51, 58, 60, 62, 67, 70], "branch": 70, "breadth": 69, "break": 0, "brief": 3, "bring": 70, "bug": [2, 3, 66], "build": [0, 67], "built": [3, 67, 70], "bypass": 44, "byte": 55, "bytesio": 60, "c": [0, 40, 44, 47, 48, 49, 52], "calcul": 70, "call": [0, 22, 23, 24, 37, 38, 39, 49, 53, 63, 67, 70], "callabl": [38, 39, 47], "can": [0, 3, 6, 16, 26, 28, 29, 32, 33, 39, 40, 43, 46, 48, 49, 50, 51, 52, 67, 70], "capabl": [0, 70], "case": [0, 69, 70], "categor": 33, "caus": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 51], "chain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 44, 46, 50, 51, 53, 54, 70], "chained_conduit": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "chained_step": [41, 46], "chang": [0, 48], "charact": [50, 51, 55], "chart": 63, "check": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 51], "chosen": 67, "class": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 35, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68], "classmethod": [48, 56, 57, 58, 59, 60, 61, 62, 63, 64], "classnam": 55, "clear": 0, "code": [0, 22, 23, 24, 37, 38, 39, 47, 48, 49, 52, 53, 67], "codebas": 67, "collect": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 39, 43, 48, 50, 51, 53, 54, 70], "color": [59, 60, 63], "coloredstyl": [60, 63], "colorschem": 60, "column": 64, "column_align": 64, "column_format": 64, "com": [0, 66], "combin": [0, 3, 37, 39, 41, 42, 43, 46], "come": [0, 69], "command": 0, "commit": 69, "common": [0, 60, 61], "commun": 69, "compact": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "compat": [22, 23, 24, 37, 38, 39, 43, 53], "complet": [3, 22, 23, 24, 31, 37, 38, 39, 48, 53, 70], "complex": [0, 3, 32, 40, 46, 67], "complex_parallel_step": 46, "compon": [0, 3, 67], "compos": [0, 32, 67, 70], "composit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 44, 50, 51, 53, 54, 70], "comprehens": 0, "compris": 48, "concept": 69, "concurr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 43, 44, 46, 50, 51, 53, 54, 67, 68, 70], "concurrent_step": 43, "concurrentconduit": [15, 19], "concurrentproduc": [5, 14, 17, 43], "concurrenttransform": [5, 18, 21, 43], "conda": 0, "conduit": [0, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 35, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61], "confirm": [50, 51], "connect": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 59], "consid": [0, 49, 50, 51, 70], "consist": [48, 70], "construct": [40, 70], "consum": [0, 3, 6, 7, 22, 26, 37, 42], "contain": [0, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 26, 39, 40], "contemporari": 0, "content": 69, "continu": 69, "contravari": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 51], "contribut": 68, "contributor": [0, 66, 68, 69], "conveni": 52, "convert": [0, 40, 59], "core": [42, 45, 58, 62, 69, 70], "correctli": 0, "correspond": [37, 40], "could": [39, 69], "covari": [5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 50, 51, 53, 54], "cpu": 48, "creat": [0, 3, 16, 22, 23, 24, 29, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 59, 63, 66], "creation": [48, 49, 52], "crucial": 69, "current": [22, 23, 24, 37, 38, 39, 47, 53], "custom": [0, 49, 67], "customis": 0, "d": [48, 64], "dag": 0, "data": [0, 3, 40, 41, 44, 47, 48, 58, 62, 67, 70], "databas": [0, 67, 70], "datafram": 40, "deal": 70, "debug": 0, "decid": 67, "dedic": 0, "def": [0, 32, 39, 40, 49, 50, 51, 70], "default": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64], "defer": [16, 20, 23, 25, 29, 30, 38, 50, 51, 53, 54, 70], "defin": [0, 28, 32, 39, 40, 49, 50, 51, 52, 70], "definit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64], "demand": 0, "demonstr": 70, "deploi": [0, 67], "depth": 69, "deriv": [49, 52, 67], "descend": 63, "describ": 52, "design": [0, 3, 22, 23, 24, 32, 67], "destin": 49, "detail": [0, 46, 66, 67, 70], "determin": 47, "develop": 0, "diagram": 0, "dict": [0, 32, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 55], "dictconduit": [37, 38, 39], "dictconsum": 42, "dictionari": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 70], "dictproduc": [42, 47], "dictproduct": [37, 38, 39, 46], "differ": [0, 3], "direct": 0, "directli": 31, "discourag": [22, 23, 24], "displai": [0, 60], "distance_km": 49, "distinct": [37, 40], "distinguish": 70, "distribut": 0, "do": [28, 37, 46, 69, 70], "document": [0, 31, 39, 66], "doe": [0, 44, 47, 70], "dot": [0, 59], "doubl": [41, 44, 46, 51, 70], "double_a": 44, "double_transform": [41, 46], "doublingtransform": 70, "doublingtransformer_4949758352": 70, "doublingtransformer_4963709264": 70, "doublingtransformer_4970669584": 70, "down": [0, 70], "download": 0, "dramat": 70, "draw": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 50, 51, 53, 54, 58, 62, 63, 64, 70], "draw_timelin": 40, "drawer": [58, 62, 63, 64], "drawingstyl": [56, 57, 58, 60, 61, 62, 64], "duplic": 43, "dynam": [3, 16, 29, 47, 48], "e": [0, 46, 48, 49, 52], "each": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 70], "eas": [0, 3], "easi": 3, "easier": 70, "easili": [48, 49, 52, 67, 70], "edg": 59, "effect": 44, "effici": [0, 67], "effort": 0, "either": [8, 14, 18, 39, 47, 58, 62], "element": [0, 3, 4, 6, 8, 9, 10, 22, 25, 28, 37, 43, 70], "els": [0, 48], "emerg": 67, "empti": [28, 40, 46], "enabl": [0, 67], "encourag": [66, 69], "end": [0, 4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 31, 37, 38, 39, 46, 48, 49, 50, 51, 52, 53, 54, 57, 63, 64, 69], "end_tim": 48, "endpoint": 0, "enhanc": [66, 69], "enrich": 0, "ensur": [0, 44, 69], "enthusiast": 69, "entri": 0, "env": 0, "environ": 68, "especi": 66, "essenti": 0, "etl": 67, "evalu": 67, "even": [48, 49, 52], "event": [22, 23, 24, 37, 38, 39, 53, 70], "everyon": 69, "exactli": 0, "exampl": [3, 32, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 60, 61, 68, 70], "except": [27, 68], "exclud": [48, 49, 52], "execut": [0, 3, 26, 32, 40, 41, 43, 63, 70], "exist": [20, 23, 24, 30, 38, 39, 51, 53, 67], "experi": 70, "experienc": 0, "expertis": 69, "explor": 70, "express": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 50, 51, 53, 54, 55, 67], "extend": 0, "extens": [3, 67], "extract": 67, "f": 0, "facetlightcolorschem": 63, "fail": 28, "fals": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 46, 50, 51, 53, 54], "faq": [0, 68], "featur": [0, 66], "feed": 0, "figur": 63, "file": [0, 60, 67], "filenam": 60, "fill": 59, "filter": 0, "final": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 37, 38, 39, 46, 49, 50, 51, 53, 54, 63, 67, 70], "final_conduit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "finalize_draw": [56, 57, 60, 61, 63, 64], "first": [43, 44, 47, 48, 49, 52, 70], "fit": [0, 59], "fix": [2, 3, 39, 47, 48], "flexibl": [3, 67], "float": [48, 57, 59, 63, 64], "flow": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68], "flow_async": 70, "flow_passthrough": 70, "flowdraw": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "flowgraphstyl": 58, "flowstyl": [58, 60, 61], "flowtextstyl": 58, "fluxu": [3, 66, 68, 69, 70], "focu": 67, "follow": [0, 39, 46, 47, 48, 49, 52, 70], "font": [59, 63], "font_famili": 63, "fontcolor": 59, "fontcolor_termin": 59, "fontsiz": 59, "foreground": 59, "form": [3, 40], "format": [0, 46, 55, 60, 64], "frame": [0, 40], "framework": [0, 67], "free": 0, "from": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 49, 50, 51, 52, 53, 54, 59, 63, 69, 70], "from_conduit": 59, "from_dict": 48, "full": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "function": [0, 67, 70], "further": [0, 70], "futur": 69, "g": [0, 48, 49, 52, 64], "gap": 69, "gather": 0, "genai": 67, "gener": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 41, 46, 48, 49, 50, 51, 53, 54, 60, 66, 67, 70], "get": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 68, 70], "get_connect": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "get_default_styl": [58, 62], "get_default_style_nam": [56, 57, 60, 61, 63, 64], "get_final_conduit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "get_lineag": [48, 49, 52], "get_lineage_attribut": [48, 49, 52], "get_named_styl": [56, 57, 58, 60, 61, 62, 63, 64], "get_output": 40, "get_outputs_per_path": 40, "get_render": 63, "get_repr_attribut": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "get_styl": [58, 62], "get_style_class": [58, 62], "get_style_kwarg": [58, 62, 63], "give": 0, "given": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 61, 63, 67], "goe": [50, 51], "granular": [4, 5, 15, 17, 19, 21, 22, 23, 24, 25, 29, 30, 37, 38, 39, 50, 51, 53, 54], "graph": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 58, 59, 60, 70], "graph_dark": [58, 70], "graphviz": [0, 60, 70], "greet": 0, "group": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54], "gt": 70, "guid": [0, 66, 68], "guidanc": 69, "ha": [0, 4, 5, 15, 17, 19, 21, 22, 23, 24, 25, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54], "handl": [0, 3, 70], "happen": 0, "har": 0, "hasdictrepr": 48, "hasexpressionrepr": [6, 40], "haslineag": [33, 48, 50, 51, 52], "have": [0, 43, 44, 50, 51, 69, 70], "header": 64, "heavi": 67, "hello": 0, "help": [33, 69], "here": [0, 3, 31, 50, 51], "hesit": 69, "highli": [0, 67], "hint": 70, "home": 68, "horizont": 63, "how": [66, 70], "i": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 63, 70], "identifi": [39, 48, 69], "ignor": [28, 39, 70], "imagin": 70, "implement": [0, 22, 23, 24, 33, 34, 35, 37, 38, 39, 49, 50, 51, 52, 53, 55, 58, 62, 67, 70], "import": [0, 32, 70], "improv": [66, 69, 70], "inch": 59, "includ": [0, 5, 32, 37, 41, 43, 44, 46, 48, 50, 51, 66, 67, 70], "increment": [40, 41, 43, 44, 46, 47], "increment_a": [43, 44, 46], "increment_b": [43, 46], "increment_by_1": 40, "increment_by_2": 40, "increment_transform": [41, 46], "incremented_numb": 47, "independ": 0, "index": [22, 25, 37, 40, 57, 63, 64, 70], "individu": [0, 40, 43, 57, 63, 64], "inform": [0, 39, 66], "ingo": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "inherit": [49, 52], "initi": [0, 1, 4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 41, 46, 50, 51, 53, 54], "initial_produc": [41, 46], "inlin": 60, "inner": 40, "input": [0, 7, 9, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 51, 53, 70], "input_data": 0, "input_typ": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 51], "insert": [48, 49, 52], "insid": 70, "inspir": [0, 32, 67], "instal": [60, 68, 70], "instanc": [32, 58, 61, 62, 64, 70], "instanti": [60, 61], "instead": [0, 22, 23, 24, 37, 38, 39, 53, 70], "instruct": [0, 66], "int": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 50, 51, 53, 54, 57, 61, 63, 64, 70], "integ": [48, 49, 52], "interfac": [0, 33, 49, 50, 51], "intermedi": [0, 32], "intermediari": 33, "intern": 31, "introduc": [68, 70], "introduct": [0, 69], "intuit": 67, "invalid": [39, 47], "invis": 44, "invit": 69, "invok": [58, 62], "involv": 0, "ipython": 60, "is_atom": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "is_chain": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "is_concurr": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "is_valid_sourc": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 51], "issu": [66, 69], "item": [0, 47, 48, 70], "iter": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 43, 46, 47, 50, 51, 53, 54, 57, 58, 62, 63, 64, 70], "iter_concurrent_conduit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "its": [0, 7, 43, 49, 51, 55], "itself": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 70], "jupyt": [60, 70], "k": 48, "keep": 0, "kei": [0, 39, 40, 48, 49, 52], "key_end_tim": 48, "key_start_tim": 48, "keyword": [39, 47, 48, 49, 52, 63], "kwarg": [28, 39, 47, 48, 56, 57, 60, 61, 63, 64], "label": [33, 48, 49, 50, 51, 52], "label1": [48, 49, 52], "label2": [48, 49, 52], "lambda": [41, 43, 44, 46, 47], "larger": 39, "latest": 47, "latin": 67, "lead": [41, 46, 57, 63, 64], "learn": [67, 70], "leav": 40, "len": 55, "length": 55, "letter": 59, "level": [0, 4, 5, 15, 17, 19, 21, 22, 23, 24, 25, 29, 30, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54], "leverag": 0, "licens": 68, "lightweight": 67, "like": [0, 3, 48, 60, 67, 70], "line": 64, "lineag": [0, 37, 45, 48], "lineageorigin": 49, "linux": 0, "list": [0, 7, 9, 18, 19, 20, 21, 23, 24, 30, 37, 38, 39, 40, 42, 48, 49, 51, 52, 53, 54, 70], "liter": 40, "litig": 0, "load": [0, 67], "local": [3, 16, 29], "lon_par": 49, "london": 49, "london_pari": 49, "look": [0, 70], "loop": [22, 23, 24, 37, 38, 39, 53, 70], "lower": 0, "lowercas": 0, "m": 0, "machin": 67, "maco": 0, "made": [4, 5, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "mai": [0, 3, 16, 28, 29, 39, 40], "main": [0, 3], "maintain": 0, "mainten": 0, "major": 66, "make": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 50, 51, 53, 54, 67, 69], "manag": [0, 17, 34, 39, 45, 67], "mani": [66, 70], "manner": 3, "manual": 0, "map": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "match": [39, 47, 70], "materi": 53, "mathemat": 70, "matplot": [40, 60, 61, 63], "matplot_dark": 40, "matplotcolorschem": 63, "matplotlib": 63, "matplotstyl": 63, "max_incr": 47, "maximis": 0, "maximum": [55, 61, 64], "mean": [48, 49, 52], "mechan": 69, "meet": [0, 69], "messag": 0, "metaclass": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64], "method": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70], "miss": 69, "mix": 43, "mixin": 49, "mode": [49, 59], "modif": [0, 28, 44, 70], "modifi": 70, "modul": [3, 32], "modular": 0, "monospac": 63, "more": [0, 4, 5, 15, 17, 19, 21, 22, 23, 24, 25, 29, 30, 37, 38, 39, 41, 42, 43, 46, 47, 50, 51, 53, 54, 63, 66, 67, 69, 70], "most": 43, "motiv": 0, "move": 0, "multipl": [0, 4, 5, 22, 23, 24, 25, 28, 29, 30, 32, 37, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 70], "multipli": 41, "multiply_transform": 41, "must": [39, 43, 47, 48, 49, 50, 51, 53, 58, 60, 62, 63, 70], "my": [58, 62], "n": [55, 70], "n_concurrent_conduit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "name": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64], "need": [0, 69, 70], "nest": [40, 48, 49, 52], "network": 67, "never": 28, "new": [3, 7, 9, 14, 15, 16, 17, 20, 22, 23, 24, 29, 30, 38, 39, 50, 51, 53, 54, 55, 63, 67, 70], "next": [32, 70], "node": [0, 59], "none": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70], "nonetyp": 52, "notat": 39, "note": [0, 2, 3, 40, 68, 70], "notebook": [60, 70], "noth": 28, "notic": 69, "notimplementederror": 28, "now": [49, 70], "number": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 47, 49, 50, 51, 53, 54, 55, 70], "numberconsum": 70, "numberconsumer_4949878224": 70, "numberconsumer_4959518928": 70, "numberconsumer_4968685840": 70, "numberdoubl": 51, "numberproduc": [50, 70], "numberproducer_4949763216": 70, "numberproducer_4959444688": 70, "numberproducer_4970669648": 70, "o": [22, 23, 24, 67, 70], "object": [0, 3, 16, 22, 25, 28, 29, 37, 39, 40, 47, 48, 49, 52, 55, 60, 63, 70], "obtain": [60, 61, 63], "offer": 0, "onc": 70, "one": [0, 15, 19, 21, 37, 41, 42, 43, 46, 47, 58, 63, 70], "ones": 67, "onli": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 47, 50, 51, 53, 54], "open": [66, 67, 69], "oper": [0, 3, 19, 21, 32, 39, 48, 49, 52, 67, 70], "opportun": 69, "optim": 0, "option": [20, 23, 24, 30, 38, 39, 40, 41, 46, 48, 51, 53, 59, 60, 61, 63, 64], "order": 63, "organis": 0, "orient": [0, 70], "origin": [0, 28, 44, 48, 49, 52, 70], "other": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 43, 50, 51, 52, 53, 54, 69], "otherwis": [5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 30, 37, 39, 51], "our": [0, 66, 68, 70], "out": [0, 40, 61, 64, 66], "outer": 40, "output": [0, 7, 9, 28, 32, 37, 40, 43, 44, 46, 48, 50, 51, 57, 61, 63, 64, 70], "output_index": [57, 63, 64], "outsid": [22, 23, 24, 37, 38, 39, 53], "over": [5, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 29, 30, 38, 39, 40, 48, 50, 51, 53, 54, 70], "overload": 3, "overrid": [48, 49, 52, 63], "overview": [3, 31, 69], "own": [63, 70], "p": 63, "packag": [3, 60], "page": 59, "pair": 55, "panda": 0, "par": 49, "paradigm": [0, 32, 67], "parallel": [0, 19, 21, 32, 39, 44, 46, 67], "parallel_step": [44, 46], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70], "parent": 70, "pari": 49, "part": 44, "partial": 59, "particularli": 67, "pass": [0, 28, 32, 39, 41, 43, 44, 46, 47, 48, 49, 52, 63, 70], "passthrough": [0, 18, 19, 21, 32, 41, 43, 46], "patent": 0, "path": [0, 32, 37, 40, 57, 63, 64, 70], "perform": [0, 70], "permit": 44, "piec": 69, "pip": 0, "pipelin": [0, 3], "place": 28, "plai": 0, "plain": 64, "plane": 49, "pleas": [0, 2, 3, 66, 69], "plot": 63, "plu": 47, "png": 60, "point": [0, 42, 48], "portion": 67, "portrait": 59, "posit": [39, 47], "power": [67, 70], "preced": [47, 48, 49, 52], "precursor": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 48, 49, 51, 52], "prefer": [22, 23, 24, 37, 38, 39, 53, 63], "prefix": [50, 51], "preserv": 0, "previou": 70, "primari": 67, "primarili": 67, "print": [32, 50, 51], "procedur": 0, "process": [3, 7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 51, 67, 68, 70], "processor": [9, 18], "produc": [0, 3, 5, 6, 7, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 53, 54, 61, 64], "product": [0, 3, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 33, 37, 38, 39, 42, 47, 49, 50, 51, 52, 53, 54, 70], "product_attribut": [48, 49, 52], "product_label": [48, 49, 50, 51, 52], "product_nam": [48, 49, 52], "product_typ": [10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 29, 30, 38, 39, 50, 51, 53, 54], "program": [0, 32], "project": [0, 66, 68], "prompt": 0, "properti": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 60, 63, 70], "protect": 0, "provid": [0, 3, 17, 31, 32, 43, 45, 46, 47, 48, 67, 69], "publish": 67, "purpos": 67, "python": [0, 39, 48, 67, 70], "pytool": [48, 56, 57, 58, 60, 61, 62, 63, 64], "quadrupl": [57, 63, 64], "queri": [67, 70], "question": 0, "quickli": [0, 67], "r": 0, "rais": [7, 9, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 37, 38, 39, 43, 47, 48, 51, 53], "random": 70, "rang": [41, 43, 46, 47, 50, 70], "rapidli": 67, "raw": 0, "reach": [0, 66], "real": [67, 70], "receiv": 70, "recent": [2, 3], "recommend": 0, "red": 67, "reduc": 0, "refer": [0, 66, 68], "reflect": [67, 69], "regular": 59, "releas": [2, 3, 68], "remot": [3, 16, 29, 70], "render": [40, 56, 57, 58, 60, 61, 62, 63, 64], "render_flow": [56, 60, 61], "render_timelin": [57, 63, 64], "replac": [48, 49, 52], "repositori": 66, "repr": 48, "repres": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 59], "represent": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 55, 59, 70], "request": [66, 67], "requir": [0, 46, 67, 70], "resourc": [0, 69], "respect": 70, "respons": [17, 67], "result": [0, 3, 22, 25, 26, 32, 37, 39, 40, 41, 43, 44, 46, 70], "retriev": [3, 16, 29, 33], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70], "reus": 0, "reusabl": 0, "review": 69, "rgbacolor": 59, "rgbcolor": 59, "role": 3, "rout": 49, "run": [0, 3, 16, 26, 29, 32, 39, 40, 44, 51, 70], "runresult": [0, 32, 37, 46, 62], "runtimeerror": [23, 38, 53], "same": [47, 48, 49, 52, 70], "scalabl": [0, 67], "scenario": 70, "scene": [67, 70], "scheme": [60, 63], "scratch": 14, "second": [44, 47, 48, 49, 52, 70], "section": [0, 69, 70], "secur": 67, "see": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 39, 46, 48, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64], "self": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 70], "send": 0, "sensor": 0, "separ": [0, 67], "sequenc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 46, 50, 51, 53, 54, 70], "sequenti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 41, 50, 51, 53, 54], "serial": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 46, 50, 51, 53, 54], "serialconduit": [4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 59], "serialprocessor": [20, 25], "serialproduc": [14, 15, 17, 23, 29, 38, 50, 53, 54], "serialsourc": [16, 20], "serialtransform": [18, 19, 21, 24, 30, 39, 51], "set": [3, 33, 48, 49, 52, 59, 63], "setup": 68, "share": 69, "shorten": 55, "should": [22, 23, 24, 28, 37, 38, 39, 53, 69], "show": 70, "shown": 70, "signatur": [39, 47], "signific": 69, "significantli": 0, "simpl": [17, 32, 35, 67, 68], "simpler": 0, "simpli": 0, "simplifi": [0, 40, 55], "simplify_complex_typ": 40, "simultan": 0, "sinc": [4, 5, 8, 9, 10, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 43, 48, 50, 51, 53, 54], "singl": [0, 3, 25, 32, 39, 40, 44, 46, 47, 59], "single_conduit": 59, "singletonabcmeta": 28, "singletonmeta": 28, "six": 0, "size": 59, "so": [49, 67, 70], "some": 67, "sourc": [0, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67], "source_product": [20, 24, 30, 39, 51], "special": [0, 44, 70], "specif": [0, 3, 16, 27, 29, 63, 64], "specifi": [40, 57, 58, 62, 63, 64, 70], "speed": 0, "squar": [41, 46, 70], "square_transform": [41, 46], "squaretransform": 70, "squaretransformer_4949873680": 70, "squaretransformer_4963698128": 70, "squaretransformer_4970669328": 70, "stage": 0, "stand": 67, "standout": 0, "start": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 57, 63, 64, 68, 70], "start_draw": [56, 57, 60, 61, 63, 64], "start_tim": 48, "stdout": [40, 61, 64], "step": [0, 32, 37, 40, 41, 42, 43, 44, 46, 48, 57, 63, 64], "step_result": 40, "still": 0, "stop": 49, "store": [0, 33, 48, 49, 52], "str": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64], "stream": [0, 40, 61, 64, 67], "streamlin": [0, 67], "string": [40, 55], "stroke": 59, "structur": [0, 67], "style": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 70], "sub": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 43, 50, 51, 53, 54], "subclass": [58, 62, 63, 70], "submit": 69, "submodul": 68, "subsequ": 44, "subset": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "subtyp": 28, "summari": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64], "super": 63, "support": [0, 22, 23, 24, 58, 62], "sure": 69, "sy": [40, 61, 64], "synchron": [3, 16, 20, 22, 23, 24, 25, 29, 30, 37, 38, 39, 47, 50, 51, 53, 54, 70], "system": 0, "t_colorschem": 60, "t_input": 43, "t_output_ret": [6, 7, 22, 25, 26], "t_precursor_ret": 49, "t_product": [41, 43], "t_product_ret": [4, 5, 8, 9, 10, 11, 14, 15, 16, 23, 24, 29, 50, 53, 54], "t_sourceproduct_arg": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 51, 70], "t_sourceproduct_ret": 17, "t_style": [58, 62], "t_transformedproduct_ret": [18, 19, 20, 21, 30, 51, 70], "tabl": 64, "table_head": 64, "tag": 33, "take": [0, 39, 46, 47, 48], "taken": 70, "task": [0, 70], "team": [66, 67], "techniqu": 0, "termin": [0, 26, 59], "test": [0, 66, 67, 70], "text": [40, 58, 59, 60, 61, 63, 64], "textio": [40, 61, 64], "textstyl": [61, 64], "thei": [0, 40, 48, 49, 52], "them": [0, 33, 70], "therefor": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54], "thi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70], "thorough": 0, "thread": [0, 22, 23, 24, 37, 38, 39, 53], "three": [0, 41, 43, 46, 70], "through": [0, 28, 32, 33, 37, 40, 41, 43, 44, 46, 67, 70], "time": [0, 48, 49, 52, 57, 63, 64, 67, 70], "timelin": [40, 57, 62, 63, 64], "timelinestyl": [62, 63, 64], "timestamp": [37, 46], "titl": [56, 57, 58, 60, 61, 62, 63, 64], "to_dict": 48, "to_dot": 59, "to_express": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 48, 50, 51, 53, 54], "to_fram": [0, 40], "togeth": [5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 26, 70], "toi": 70, "tool": 0, "top": 67, "track": [0, 45], "tracker": 69, "train": 49, "transfer": 0, "transform": [0, 3, 5, 6, 7, 9, 10, 11, 22, 24, 25, 26, 28, 34, 37, 39, 40, 41, 42, 43, 44, 47, 51, 67], "transform_data": 47, "transform_step": 47, "transpar": 28, "true": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 46, 50, 51, 53, 54], "tupl": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 50, 51, 53, 54, 57, 59, 63, 64, 70], "tutori": 66, "two": [0, 43, 46, 47, 70], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70], "typeerror": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 43, 47, 48, 51], "typevar": [5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 41, 43, 50, 51, 53, 54, 58, 60, 62], "u": [0, 69], "unchang": [32, 41, 43, 46], "unconnect": 59, "unconstrain": 59, "undefin": 63, "under": 0, "underli": [0, 67], "union": [7, 9, 18, 19, 21, 38, 39, 41, 43, 46, 58, 59, 60, 62, 63], "uniontyp": 46, "uniqu": [48, 49, 52], "unit": 66, "unpack": 43, "until": [22, 23, 24, 37, 38, 39, 53], "up": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 50, 51, 53, 54, 57, 63, 64, 67], "updat": [0, 2, 3], "upper": 0, "uppercas": 0, "us": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 37, 38, 39, 40, 44, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 63, 69, 70], "user": [31, 49, 52, 67, 68], "usual": 31, "utilis": 0, "v": 0, "valid": [7, 9, 18, 19, 20, 21, 22, 24, 25, 30, 37, 39, 48, 51], "valu": [4, 8, 9, 10, 16, 20, 22, 23, 24, 25, 28, 29, 30, 32, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70], "valuabl": 69, "value1": [48, 49, 52], "value2": [48, 49, 52], "valueerror": [39, 48], "variabl": 0, "variant": [16, 20, 23, 25, 29, 30, 38, 50, 51, 53, 54], "varieti": 67, "variou": 0, "ve": 69, "venv": 0, "verifi": 0, "versatil": 0, "version": [50, 70], "via": 70, "view": [0, 48], "visit": 0, "visual": [0, 36, 65, 70], "wa": 67, "wai": [33, 44, 67, 68], "want": [0, 70], "warn": 27, "we": [0, 32, 49, 66, 67, 69, 70], "welcom": 0, "well": [32, 44, 67], "were": [33, 48, 49, 52], "what": 0, "when": [0, 22, 23, 24, 28, 37, 38, 39, 53, 60, 70], "where": [0, 22, 25, 37, 40, 48, 49, 52, 55, 70], "whether": 69, "which": [0, 3, 6, 50, 51, 60, 67, 70], "while": [47, 70], "whose": 28, "why": 68, "wide": 67, "width": [59, 61, 64], "window": 0, "with_traceback": 27, "within": [0, 22, 23, 24, 37, 38, 39, 53], "without": [0, 28, 43, 44, 60, 61, 67, 70], "word": 67, "work": [0, 60], "workflow": [0, 32], "workload": 67, "world": 0, "worri": 67, "would": [43, 44], "write": [40, 60, 61, 64, 67], "x": [0, 32, 39, 47, 67, 70], "yield": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 50, 51, 53, 54, 70], "yml": 0, "you": [0, 69, 70], "your": [0, 69, 70]}, "titles": ["Home", "Release Notes", "&lt;no title&gt;", "API Reference", "fluxus.core.AtomicConduit", "fluxus.core.ConcurrentConduit", "fluxus.core.Conduit", "fluxus.core.Processor", "fluxus.core.SerialConduit", "fluxus.core.SerialProcessor", "fluxus.core.SerialSource", "fluxus.core.Source", "fluxus.core.producer", "fluxus.core.transformer", "fluxus.core.producer.BaseProducer", "fluxus.core.producer.ConcurrentProducer", "fluxus.core.producer.SerialProducer", "fluxus.core.producer.SimpleConcurrentProducer", "fluxus.core.transformer.BaseTransformer", "fluxus.core.transformer.ConcurrentTransformer", "fluxus.core.transformer.SerialTransformer", "fluxus.core.transformer.SimpleConcurrentTransformer", "fluxus.AsyncConsumer", "fluxus.AsyncProducer", "fluxus.AsyncTransformer", "fluxus.Consumer", "fluxus.Flow", "fluxus.FlowWarning", "fluxus.Passthrough", "fluxus.Producer", "fluxus.Transformer", "fluxus.core", "fluxus.functional", "fluxus.lineage", "fluxus.simple", "fluxus.util", "fluxus.viz", "fluxus.functional.conduit.DictConsumer", "fluxus.functional.conduit.DictProducer", "fluxus.functional.conduit.Step", "fluxus.functional.RunResult", "fluxus.functional.chain", "fluxus.functional.conduit", "fluxus.functional.parallel", "fluxus.functional.passthrough", "fluxus.functional.product", "fluxus.functional.run", "fluxus.functional.step", "fluxus.functional.product.DictProduct", "fluxus.lineage.HasLineage", "fluxus.lineage.LabelingProducer", "fluxus.lineage.LabelingTransformer", "fluxus.lineage.LineageOrigin", "fluxus.simple.SimpleAsyncProducer", "fluxus.simple.SimpleProducer", "fluxus.util.simplify_repr_attributes", "fluxus.viz.base.FlowStyle", "fluxus.viz.base.TimelineStyle", "fluxus.viz.FlowDrawer", "fluxus.viz.FlowGraph", "fluxus.viz.FlowGraphStyle", "fluxus.viz.FlowTextStyle", "fluxus.viz.TimelineDrawer", "fluxus.viz.TimelineMatplotStyle", "fluxus.viz.TimelineTextStyle", "fluxus.viz.base", "Contributing", "FAQ", "Table of Contents", "User Guide", "Creating a Flow with custom classes for Producers, Transformers, and Consumers"], "titleterms": {"0": 1, "1": 1, "A": 0, "The": 70, "about": 67, "api": 3, "ar": 67, "asyncconsum": 22, "asynchron": 70, "asyncproduc": 23, "asynctransform": 24, "atomicconduit": 4, "base": [56, 57, 65], "baseproduc": 14, "basetransform": 18, "build": 70, "case": 67, "chain": 41, "class": [3, 12, 13, 31, 32, 33, 34, 36, 42, 45, 65, 70], "conclud": 70, "concurr": 0, "concurrentconduit": 5, "concurrentproduc": 15, "concurrenttransform": 19, "conduit": [6, 37, 38, 39, 42, 70], "consum": [25, 70], "content": 68, "contribut": [0, 66, 69], "core": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31], "creat": 70, "custom": 70, "depend": 0, "develop": 67, "dictconsum": 37, "dictproduc": 38, "dictproduct": 48, "differ": 67, "doe": 67, "environ": 0, "exampl": [0, 67], "except": 3, "faq": 67, "flow": [0, 26, 70], "flowdraw": 58, "flowgraph": 59, "flowgraphstyl": 60, "flowstyl": 56, "flowtextstyl": 61, "flowwarn": 27, "fluxu": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67], "from": 67, "function": [32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "get": 0, "guid": 69, "haslineag": 49, "home": 0, "how": 67, "i": 67, "instal": 0, "introduc": 0, "introduct": 70, "labelingproduc": 50, "labelingtransform": 51, "librari": 67, "licens": 0, "lineag": [33, 49, 50, 51, 52], "lineageorigin": 52, "name": 67, "note": 1, "option": 0, "origin": 67, "other": 67, "our": 69, "overview": 70, "parallel": [43, 70], "passthrough": [28, 44, 70], "pipelin": 67, "process": 0, "processor": 7, "produc": [12, 14, 15, 16, 17, 29, 70], "product": [45, 48], "project": 67, "refer": 3, "releas": 1, "remark": 70, "run": 46, "runresult": 40, "serialconduit": 8, "serialprocessor": 9, "serialproduc": 16, "serialsourc": 10, "serialtransform": 20, "setup": 0, "simpl": [0, 34, 53, 54], "simpleasyncproduc": 53, "simpleconcurrentproduc": 17, "simpleconcurrenttransform": 21, "simpleproduc": 54, "simplify_repr_attribut": 55, "sourc": 11, "start": 0, "step": [39, 47], "submodul": [3, 31, 32, 36], "tabl": 68, "timelinedraw": 62, "timelinematplotstyl": 63, "timelinestyl": 57, "timelinetextstyl": 64, "transform": [13, 18, 19, 20, 21, 30, 70], "us": 67, "user": [0, 69], "util": [35, 55], "virtual": 0, "viz": [36, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "wai": 66, "what": 67, "who": 67, "why": [0, 67], "workflow": 67}})